import re
import json
import asyncio
import threading
import random
import datetime
import pytz # برای مدیریت منطقه زمانی (نیاز به نصب: pip install pytz)
import requests # برای درخواست‌های HTTP به API (نیاز به نصب: pip install requests)
from rubpy import Client
from rubpy.types import Updates
from apscheduler.schedulers.blocking import BlockingScheduler
import os # برای بررسی وجود فایل‌ها
import time # برای محاسبه زمان فعالیت ربات

# === تنظیمات ربات ===
bot = Client(name="Necto")

# === نام فایل‌های داده‌ای ===
QA_FILE = "qa_data.json"
WELCOMED_MEMBERS_FILE = "welcomed_members.json"
CONFIG_FILE = "config.json"
GROUP_RULES_FILE = "group_rules.json"
USER_STATS_FILE = "user_stats.json" # فایل جدید برای آمار کاربران

# === متغیرهای جهانی (از فایل کانفیگ بارگذاری می‌شوند) ===
config = {}
ADMIN_IDS = []
DEFAULT_CHANNEL_ID = ""
OPENWEATHER_API_KEY = "" # برای کلید API آب و هوا

# === زمان شروع ربات ===
BOT_START_TIME = time.time() # ذخیره زمان شروع ربات

# === توابع کمکی برای بارگذاری و ذخیره داده‌ها ===
def load_config():
    """تنظیمات اصلی ربات را از فایل JSON بارگذاری می‌کند."""
    global ADMIN_IDS, DEFAULT_CHANNEL_ID, OPENWEATHER_API_KEY
    try:
        if os.path.exists(CONFIG_FILE):
            with open(CONFIG_FILE, 'r', encoding='utf-8') as f:
                loaded_config = json.load(f)
                
                if 'admin_ids' not in loaded_config:
                    loaded_config['admin_ids'] = []
                if 'default_channel_id' not in loaded_config:
                    loaded_config['default_channel_id'] = ""
                if 'group_settings' not in loaded_config:
                    loaded_config['group_settings'] = {}
                if 'openweathermap_api_key' not in loaded_config: # اضافه شدن کلید API آب و هوا
                    loaded_config['openweathermap_api_key'] = ""
                
                # اطمینان از وجود تنظیمات جدید در group_settings برای هر گروه
                for chat_id, settings in loaded_config['group_settings'].items():
                    if 'class_mode_active' not in settings:
                        settings['class_mode_active'] = False
                    if 'auto_close_time' not in settings:
                        settings['auto_close_time'] = None
                    if 'auto_open_time' not in settings:
                        settings['auto_open_time'] = None
                    if 'forbidden_words' not in settings: # برای ضد فحش
                        settings['forbidden_words'] = []
                    if 'spam_protection_active' not in settings: # برای ضد اسپم
                        settings['spam_protection_active'] = False
                    if 'welcome_message_enabled' not in settings: # اطمینان از وجود
                        settings['welcome_message_enabled'] = False
                    if 'welcome_message_text' not in settings: # اطمینان از وجود
                        settings['welcome_message_text'] = "سلام [نام کاربر]! به گروه [نام گروه] خوش آمدی."
                    if 'delete_links_enabled' not in settings: # اطمینان از وجود
                        settings['delete_links_enabled'] = True
                    if 'delete_forwards_enabled' not in settings: # اطمینان از وجود
                        settings['delete_forwards_enabled'] = True
                    if 'delete_ids_enabled' not in settings: # اطمینان از وجود
                        settings['delete_ids_enabled'] = True
                    if 'leave_message_enabled' not in settings: # برای پیام خداحافظی
                        settings['leave_message_enabled'] = False
                    if 'leave_message_text' not in settings: # برای پیام خداحافظی
                        settings['leave_message_text'] = "خداحافظ [نام کاربر]! امیدواریم باز هم شما را ببینیم."
                    if 'allowed_forward_sources' not in settings: # برای فوروارد خاص
                        settings['allowed_forward_sources'] = []

                loaded_config['admin_ids'] = [guid for guid in loaded_config['admin_ids'] if isinstance(guid, str) and re.fullmatch(r"u[0-9a-fA-F]{32}", guid, re.IGNORECASE)]

                ADMIN_IDS = loaded_config['admin_ids']
                DEFAULT_CHANNEL_ID = loaded_config['default_channel_id']
                OPENWEATHER_API_KEY = loaded_config['openweathermap_api_key'] # بارگذاری کلید API
                return loaded_config
        else:
            default_config = {
                "admin_ids": [],
                "default_channel_id": "",
                "group_settings": {},
                "openweathermap_api_key": "" # اضافه شدن به کانفیگ پیش‌فرض
            }
            save_config(default_config)
            return default_config
    except json.JSONDecodeError:
        print(f"خطا: فایل {CONFIG_FILE} فرمت JSON صحیح ندارد. یک فایل خالی ایجاد می‌شود.")
        default_config = {
            "admin_ids": [],
            "default_channel_id": "",
            "group_settings": {},
            "openweathermap_api_key": "" # اضافه شدن به کانفیگ پیش‌فرض
        }
        save_config(default_config)
        return default_config

def save_config(cfg):
    """تنظیمات اصلی ربات را در فایل JSON ذخیره می‌کند."""
    with open(CONFIG_FILE, 'w', encoding='utf-8') as f:
        json.dump(cfg, f, ensure_ascii=False, indent=4)

def load_qa_data():
    """داده‌های پرسش و پاسخ را از فایل JSON بارگذاری می‌کند."""
    try:
        if os.path.exists(QA_FILE):
            with open(QA_FILE, 'r', encoding='utf-8') as f:
                data = json.load(f)
                return {str(k): v for k, v in data.items()}
        return {}
    except json.JSONDecodeError:
        print(f"خطا: فایل {QA_FILE} فرمت JSON صحیح ندارد. یک فایل خالی ایجاد می‌شود.")
        return {}

def save_qa_data(data):
    """داده‌های پرسش و پاسخ را در فایل JSON ذخره می‌کند."""
    with open(QA_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

def load_welcomed_members():
    """لیست اعضای خوش‌آمدگویی شده (برای کانال) را بارگذاری می‌کند."""
    try:
        if os.path.exists(WELCOMED_MEMBERS_FILE):
            with open(WELCOMED_MEMBERS_FILE, 'r', encoding='utf-8') as f:
                return set(json.load(f))
        return set()
    except json.JSONDecodeError:
        print(f"خطا: فایل {WELCOMED_MEMBERS_FILE} فرمت JSON صحیح ندارد. یک لیست خالی ایجاد می‌شود.")
        return set()

def save_welcomed_members(members_set):
    """لیست اعضای خوش‌آمدگویی شده (برای کانال) را ذخیره می‌کند."""
    with open(WELCOMED_MEMBERS_FILE, 'w', encoding='utf-8') as f:
        json.dump(list(members_set), f, ensure_ascii=False, indent=4)

def load_group_rules():
    """قوانین گروه را از فایل JSON بارگذاری می‌کند."""
    try:
        if os.path.exists(GROUP_RULES_FILE):
            with open(GROUP_RULES_FILE, 'r', encoding='utf-8') as f:
                data = json.load(f)
                return {str(k): v for k, v in data.items()}
        return {}
    except json.JSONDecodeError:
        print(f"خطا: فایل {GROUP_RULES_FILE} فرمت JSON صحیح ندارد. یک فایل خالی ایجاد می‌شود.")
        return {}

def save_group_rules(data):
    """قوانین گروه را در فایل JSON ذخیره می‌کند."""
    with open(GROUP_RULES_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# === جدید: توابع بارگذاری و ذخیره آمار کاربران ===
def load_user_stats():
    """آمار فعالیت کاربران را از فایل JSON بارگذاری می‌کند."""
    try:
        if os.path.exists(USER_STATS_FILE):
            with open(USER_STATS_FILE, 'r', encoding='utf-8') as f:
                data = json.load(f)
                return {str(k): v for k, v in data.items()}
        return {}
    except json.JSONDecodeError:
        print(f"خطا: فایل {USER_STATS_FILE} فرمت JSON صحیح ندارد. یک فایل خالی ایجاد می‌شود.")
        return {}

def save_user_stats(data):
    """آمار فعالیت کاربران را در فایل JSON ذخیره می‌کند."""
    with open(USER_STATS_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# === دیکشنری برای ذخیره آمار فعالیت کاربران ===
user_activity_stats = load_user_stats()

# === دیکشنری برای ردیابی اسپم ===
spam_tracking = {} # {user_guid: {'last_message_time': timestamp, 'message_count_in_window': count}}

# === توابع کمکی برای بازی سنگ کاغذ قیچی ===
def play_rock_paper_scissors(user_choice):
    """
    بازی سنگ کاغذ قیچی را اجرا می‌کند.
    :param user_choice: انتخاب کاربر (سنگ، کاغذ، قیچی)
    :return: نتیجه بازی و انتخاب ربات
    """
    choices = ["سنگ", "کاغذ", "قیچی"]
    bot_choice = random.choice(choices)

    user_choice_normalized = user_choice.strip().lower()

    if user_choice_normalized == bot_choice:
        return f"مساوی شد!\nمن هم **{bot_choice}** انتخاب کردم."
    elif (user_choice_normalized == "سنگ" and bot_choice == "قیچی") or \
         (user_choice_normalized == "کاغذ" and bot_choice == "سنگ") or \
         (user_choice_normalized == "قیچی" and bot_choice == "کاغذ"):
        return f"تو بردی! 🎉\nمن **{bot_choice}** انتخاب کردم."
    else:
        return f"من بردم! 🤖\nمن **{bot_choice}** انتخاب کردم."

# === تابع برای دریافت نرخ ارز و طلا ===
def get_exchange_rates():
    """نرخ لحظه‌ای ارز و طلا را از یک API خارجی دریافت می‌کند."""
    try:
        # در صورت عدم دسترسی به API یا برای تست، می‌توانید از داده‌های Mock استفاده کنید:
        data = {
            "dolar": {"price": "887,400"},
            "euro": {"price": "1,028,600"},
            "gold_ounce": {"price": "2,350"}, # قیمت انس جهانی (ممکن است با طلای ۱۸ عیار متفاوت باشد)
            "gold_18k": {"price": "70,818,000"} # قیمت هر گرم طلای ۱۸ عیار به تومان
        }
        
        dolar = data.get("dolar", {}).get("price", "نامشخص")
        euro = data.get("euro", {}).get("price", "نامشخص")
        gold_18k = data.get("gold_18k", {}).get("price", "نامشخص")

        return (
            f"💰 نرخ لحظه‌ای ارز و طلا:\n\n"
            f"🇺🇸 دلار (آزاد): **{dolar}** ریال\n"
            f"🇪🇺 یورو (آزاد): **{euro}** ریال\n"
            f"⚜️ طلا (۱۸ عیار): **{gold_18k}** ریال\n\n"
            f"آخرین به‌روزرسانی: {datetime.datetime.now().strftime('%H:%M')}"
        )
    except requests.exceptions.RequestException as e:
        print(f"خطا در دریافت نرخ ارز: {e}")
        return "❌ متاسفانه در حال حاضر قادر به دریافت نرخ لحظه‌ای ارز و طلا نیستم. لطفاً بعداً امتحان کنید."
    except Exception as e:
        print(f"خطای ناشناخته در دریافت نرخ ارز: {e}")
        return "❌ مشکلی در سیستم دریافت نرخ ارز پیش آمده است. لطفاً بعداً امتحان کنید."

# === تابع برای دریافت آب و هوا ===
def get_weather(city_name):
    """
    اطلاعات آب و هوا را برای یک شهر مشخص از OpenWeatherMap دریافت می‌کند.
    :param city_name: نام شهر (به انگلیسی)
    :return: متن شامل وضعیت آب و هوا یا پیام خطا
    """
    if not OPENWEATHER_API_KEY or OPENWEATHER_API_KEY == "e93bf592665507c0cac65326f388e790":
        return "❌ کلید API آب و هوا تنظیم نشده است. لطفاً از مدیر ربات بخواهید آن را تنظیم کند. (دستور /تنظیم_کلید_آب_و_هوا)"

    base_url = "http://api.openweathermap.org/data/2.5/weather?"
    # از "lang=fa" برای دریافت توضیحات فارسی استفاده می‌کنیم
    complete_url = f"{base_url}q={city_name}&appid={OPENWEATHER_API_KEY}&units=metric&lang=fa"

    try:
        response = requests.get(complete_url)
        response.raise_for_status() # Raise an exception for HTTP errors
        data = response.json()

        if data["cod"] != "404":
            main = data["main"]
            weather = data["weather"][0]
            city = data["name"]
            country = data["sys"]["country"]

            temperature = main["temp"]
            humidity = main["humidity"]
            description = weather["description"]

            return (
                f"🏙️ آب و هوای **{city}, {country}**:\n"
                f"🌡️ دما: **{temperature}°C**\n"
                f"💧 رطوبت: **{humidity}%**\n"
                f"☁️ وضعیت: **{description}**"
            )
        else:
            return f"❌ اطلاعات آب و هوا برای شهر '{city_name}' یافت نشد. لطفاً نام شهر را صحیح وارد کنید."
    except requests.exceptions.RequestException as e:
        print(f"خطا در دریافت اطلاعات آب و هوا: {e}")
        return "❌ مشکلی در دریافت اطلاعات آب و هوا پیش آمد. لطفاً بعداً تلاش کنید."
    except Exception as e:
        print(f"خطای ناشناخته‌ای در سیستم آب و هوا رخ داد: {e}")
        return "❌ خطای ناشناخته‌ای در سیستم آب و هوا رخ داد."


# === دیکشنری پاسخ‌های آماده برای کلمات کلیدی (حالت سخنگو) ===
group_speaker_responses = {
    "سلام": ["سلام بر تو ", "سلام نفسم", "سلام", "سلام عزیزم", "سلامم", "سلام عشقم", "سلام علک","سلام بر دوست عزیزم"],
    "خوبی": ["اره تو چطوری", "نه مریضم", "اره عالیم", "عالیم", "خوبم ممنون تو چطوری", "خوبم"],
    "خوبم": ["خدارو شکر", "چ خوب", "چ عالی", "ع"],
    "چه خبر": ["والا خبری نیستش", "والا بیکارم", "بیکارم 😭😭", "حالم خوب نیستش ❤️‍🩹"],
    "ربات": ["جانم🌹", "بله 🙂", "بفرما ارباب", "بله کارم داشتی","جان صدام کردی ؟","جان صدام کردی ", "جان"],
    "من رفتم ": ["کجا منم باخودت ببر ","خدافظ","بای بای ","خدافظییی"],
 "خوبم ممنوپ": ["خدارو شکر", "چ خوب", "چ عالی", "ع"],
    "دیگه چه خبر " : ["خبری نی","فقط مشگل ","والا بیکارم ","از تو چه خبر ؟"],
    
 "   دیگ چ خبر " : ["خبری نی","فقط مشگل ","والا بیکارم ","از تو چه خبر ؟"],
 
 "دیگه چ خبر" : ["خبری نی","فقط مشگل ","والا بیکارم ","از تو چه خبر ؟"],
 
 "مشگل چی ؟": ["روهی روانی ","مالی"],
 
 "مشگل چی": ["روهی روانی ","مالی"],
 
 
         "چالش": [
        "چالش ۲۱ روز بدون گوشی", "چالش ۳۰ روز مدیتیشن روزانه", "چالش ۷ روز بدون گوشی بعد از ساعت ۹ شب",
        "چالش نوشتن شکرگزاری روزانه برای ۱۴ روز", "چالش بیدار شدن ساعت ۵ صبح به مدت یک هفته",
        "چallenge حفظ یک شعر جدید در روز برای ۱۰ روز", "چالش یادگیری ۵۰ کلمه از یک زبان جدید در ۵ روز",
        "چالش حل یک جدول سودوکو یا معمای منطقی روزانه", "چالش مطالعه ۱۰ صفحه کتاب در روز به مدت یک ماه",
        "چالش روزانه نوشتن یک خاطره یا ایده برای ۳۰ روز", "چالش عکس قدیمی: پست یک عکس از ۵ سال پیش",
        "چالش \"یک روز از زندگی من\" با استوری اینستاگرام", "چallenge معرفی ۵ چیز مورد علاقه‌ات به فالوورها",
        "چالش بدون فیلتر برای یک هفته", "چالش ساخت ویدیو تایم‌لپس از یک پروژه هنری یا کاری",
        "چالش ۳۰ روز پلانک (شروع از ۲۰ ثانیه تا ۵ دقیقه)", "چالش حذف قند و نوشابه برای ۱۴ روز",
        "چالش ۱۰ هزار قدم پیاده‌روی روزانه", "چallenge ۳۰ روز نوشیدن ۸ لیوان آب در روز",
        "چالش انجام یک حرکت ورزشی جدید در هر روز"
    ],
    
    "فال": [
        "امروز روزیه که یه خبر خوب می‌رسه، فقط حواست به نشونه‌ها باشه!",
        "تا سه روز آینده یه اتفاق غیرمنتظره اما شیرین در انتظارت هست.",
        "یکی که تو فکرش نیستی، بیشتر از چیزی که فکر می‌کنی بهت توجه داره.",
        "به زودی پولی از جایی که انتظار نداری بهت می‌رسه.",
        "یکی از دوستات حقیقتی رو بهت نمی‌گه، اما به زودی خودش برملا می‌شه.",
        "عدد شانس امروزت: ۷. با هر چی امروز ۷ باشه، خوش‌شانسی میاره!",
        "اگه الآن یه کارت بکشی, روش نوشته: \"صبوری, آرامش, پیروزی نزدیکه.\"",
        "رنگی که امروز بهت آرامش می‌ده: آبی آسمونی.",
        "کائنات منتظرن تو یک تصمیم مهم بگیری تا پاداشش رو ببینی!",
        "خواب دیشبت نشونه‌ای از آینده بوده. بهش دقت کن.",
        "کسی هست که نمی‌تونه احساساتش رو بگه، ولی دلش پیش توئه.",
        "مسیر رابطه‌ات به زودی روشن‌تر می‌شه، فقط کافیه صادق باشی.",
        "به‌زودی پیامی از یه نفر می‌گیری که دلت براش تنگ شده بوده.",
        "دلت یه تغییر می‌خواد. آماده‌ای برای شروعی تازه؟",
        "یه جدایی ممکنه باعث وصالی بهتر بشه، ناامید نباش.",
        "یه چیز کوچیک باعث خنده‌ات می‌شه، امروز غم بهت نزدیک نمی‌شه!",
        "تو فنجونت یه پرنده هست... یعنی آزادی، سفری یا خبری در راهه.",
        "اگه امروز یه سلبریتی بودی، مثل \"کیانو ریوز\" بودی! خونسرد و جذاب.",
        "حرف اول اسم کسی که خیلی بهت فکر می‌کنه: (م)",
        "بین A و B انتخاب کن...\nA: خبر خوشی در راهه\nB: باید صبر کنی، ولی نتیجه‌اش شیرینه"
    ],
"اره": ["اجر پاره","ارع","هم","اهم"],
"ارع" : ["اجر پاره","ارع","هم","اهم"],
"اره بابا ": ["اجر پاره","ارع","هم","اهم"],
"نه": ["اوک","باشه","اوکی"],
"سازنده": ["سازندم با ایدی @a120100"],

    
        "خدافظی": ["بای بای 🤗", "خدافظ", "خدافظ ارباب", "خدافظ عشقم 🌹🌹", "دوباره میبینمت"],

"داستان": [
        "روزی روزگاری، در سرزمینی دور، پادشاهی زندگی می‌کرد که دختری زیبارو داشت...",
        "در اعماق جنگلی انبوه، کلبه‌ای قدیمی بود که هیچ‌کس جرأت نزدیک شدن به آن را نداشت...",
        "یک شب مهتابی، دریانوردی شجاع در اقیانوس آرام گم شد و به جزیره‌ای ناشناخته رسید...",
        "در شهری پر از آسمان‌خراش‌های بلند، روباتی کوچک با قلبی بزرگ زندگی می‌کرد که آرزوهای بزرگی داشت...",
        "زمانی بود که حیوانات می‌توانستند با انسان‌ها حرف بزنند و رازهای طبیعت را فاش کنند...",
        "گربه‌ای تنها در کوچه‌ای تاریک به دنبال خانه‌ای می‌گشت تا سرپناهی پیدا کند...",
        "در زیر دریایی عمیق، ماهی کوچکی به دنبال مروارید گمشده‌ای بود...",
        "پیرزنی مهربان در دهکده‌ای کوچک، هر روز برای پرندگان آواز می‌خواند...",
        "شوالیه‌ای شجاع برای نجات شاهزاده خانم به سفری پرخطر رفت...",
        "مخترعی جوان دستگاهی ساخت که می‌توانست آینده را نشان دهد، اما با خطراتی همراه بود...",
        "در سیاره‌ای دوردست، موجودات فضایی برای اولین بار با انسان‌ها ملاقات کردند...",
        "گنجی پنهان در جزیره‌ای متروک، سال‌ها منتظر کاشفان خود بود...",
        "دختری با صدای جادویی می‌توانست گل‌ها را شکوفا کند و باران را فرا بخواند...",
        "در زمان‌های قدیم، قهرمانی افسانه‌ای از مردم در برابر اژدهای شیطانی محافظت می‌کرد...",
        "کتابخانه‌ای قدیمی، حاوی رازهای پنهانی بود که فقط خوانندگان واقعی می‌توانستند آن را کشف کنند...",
        "در آینده‌ای دور، انسان‌ها توانستند به کهکشان‌های دیگر سفر کنند و جهان‌های جدیدی را بیابند...",
        "بچه‌ای کوچک با یک مداد جادویی می‌توانست هر چیزی را که نقاشی می‌کرد، به واقعیت تبدیل کند...",
        "دو دوست قدیمی در یک ماجراجویی هیجان‌انگیز برای پیدا کردن یک نقشه باستانی شریک شدند...",
        "پرنده‌ای آوازخوان، هر روز در پنجره خانه‌ای متروک آواز می‌خواند و امید را زنده نگه می‌داشت...",
        "در کوهی بلند و مه آلود، معبدی باستانی وجود داشت که راه رسیدن به روشنایی را نشان می‌داد...",
        "کشاورزی فقیر، دانه‌ای جادویی کاشت که در یک شب درخت غول‌پیکری شد...",
        "در سرزمین رویاها، موجوداتی عجیب و غریب زندگی می‌کردند که فقط در خواب دیده می‌شدند...",
        "ساعتی قدیمی که می‌توانست زمان را متوقف کند، در دست یک پسر کنجکاو افتاد...",
        "پازلی پیچیده که رازی بزرگ را پنهان کرده بود، توسط یک محقق جوان حل شد...",
        "در دوران شوالیه‌ها، جنگجویی با یک شمشیر افسانه‌ای به نبرد با ظلم پرداخت...",
        "در اعماق اقیانوس، شهر گمشده‌ای وجود داشت که توسط پریان دریایی اداره می‌شد...",
        "پادشاهی که از بیماری رنج می‌برد، به دنبال گل نادری بود که در بلندترین کوه می‌رویید...",
        "یک کارآگاه زیرک برای حل معمایی پیچیده به دل شهر رفت...",
        "در آسمانی پرستاره، ستاره‌ای درخشان به زمین سقوط کرد و زندگی یک کودک را تغییر داد...",
        "سربازی شجاع، برای دفاع از سرزمینش در برابر دشمنان، با تمام توان جنگید..."
    ],

"جوک": [
    "یه روز یه لره از بالای پشت بوم می‌افته زمین، مردم دورش جمع میشن، میگن: چی شد؟ میگه: والا منم نفهمیدم چی شد، خیلی سریع اتفاق افتاد!",
    "غضنفر میره خواستگاری، ازش می‌پرسن: شغلتون چیه؟ میگه: بیکارم. میگن: پس با چی می‌خوای زندگی کنی؟ میگه: با شما!",
    "یه روز غضنفر میره دزدی، گاوصندوق رو باز میکنه میبینه خالیه، میگه: ای بابا! دزد زده بهش!",
    "ترکه میره کله‌پزی، میگه: یه کله‌پاچه بدین! یارو میگه: با چشم؟ میگه: نه بابا، با نون!",
    "یک روز دو تا رشتی با هم دعواشون میشه، یکیشون میگه: پاشو بریم پیش قاضی! اون یکی میگه: باشه بریم، ولی سر راه دو تا شاهد هم بگیریم!",
    "یه روز یه تهرانی میره شمال، کنار دریا وایمیسته میگه: چه بوی خوبی میاد! یه شمالی میگه: بوی دریاست! تهرانیه میگه: آره، از بس که دریا رو نشسته اینجوری بو میده!",
    "بچه به باباش میگه: بابا جون میشه یه داستان واقعی برام بگی؟ باباش میگه: بله پسرم، داستان آشنایی من و مادرت!",
    "یه روز یه معتاده میره دکتر. دکتر میگه: باید ترک کنی. معتاده میگه: نه بابا! اونو که هر روز می‌کنم!",
    "یه نفر میره واسه استخدام. مدیر میگه: سابقه کار داری؟ میگه: بله، در این زمینه ۱۵ سال سابقه دارم. مدیر میگه: پس چرا اینقدر جوونی؟ میگه: آخه من ۱۰ سال اول رو بدون حقوق کار کردم!",
    "معلم به شاگردش: ۵ تا پرنده روی شاخه هستن، ۲ تاشون رو با تیر می‌زنیم، چند تا باقی میمونه؟ شاگرد: هیچی! چون بقیه‌اش پرواز می‌کنن!",
    "یه نفر میره شیرینی‌فروشی میگه: آقا یه کیک بده. شیرینی‌فروشه میگه: تولده؟ میگه: نه بابا، مرگه! میگه: مبارک باشه!",
    "غضنفر با ماشین میره تو دره. می‌رن نجاتش بدن میگن: حالت چطوره؟ میگه: خوبم! دارم میرم پایین ببینم تهش چیه!",
    "معلم: چرا همیشه تکالیفتو کامل نمی‌نویسی؟ شاگرد: آخه مامانم میگه: یه کار رو هیچوقت تا آخر انجام نده که همیشه کار داشته باشی!",
    "یه روز یه اصفهانی رو برق می‌گیره. میگه: آی سوختم! می‌گه: چرا؟ میگه: آخه برق مجانی بود!",
    "یه نفر میره بانک میگه: می‌خوام وام بگیرم. کارمنده میگه: ضامن داری؟ میگه: بله، خدا! کارمنده میگه: آدرسش کجاست؟",
    "دو تا رفیق میرن تو یه مغازه. یکیشون میگه: این چقدر گرونه! اون یکی میگه: آره، ولی کیفیتش هم همینه!",
    "یه نفر میره رستوران، میگه: آقا یه آبگوشت بیارید که توش گوشت نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: آب و گوشت!",
    "غضنفر میره سوپر مارکت، میگه: آقا تخم‌مرغ دارید؟ سوپرمارکتی میگه: بله. غضنفر میگه: مرسی!",
    "یه نفر میره خواستگاری، ازش میپرسن: چقدر حقوق میگیری؟ میگه: دو میلیون. میگن: پس با دو میلیون چطور میخوای زندگی کنی؟ میگه: با قرض!",
    "معلم به شاگردش: چرا همیشه دیر میای؟ شاگرد: آخه خوابم میاد! معلم: پس چرا زودتر نمی‌خوابی؟ شاگرد: آخه کار دارم!",
    "یه روز یه دکتر به مریضش میگه: شما فقط ۱۰ روز دیگه زنده ای. مریضه میگه: پس بقیه روزا چی؟",
    "دو تا مورچه همدیگه رو می‌بینن. یکیشون میگه: سلام! اون یکی میگه: اه؟ باز تویی؟",
    "یه نفر میره رستوران، میگه: آقا یه پیتزا قارچ. گارسون میگه: سوسیس؟ میگه: نه بابا! قارچ!",
    "غضنفر میره مغازه کتاب‌فروشی، میگه: آقا کتاب 'چگونه میلیونر شویم' دارید؟ فروشنده میگه: نویسنده‌اش کیه؟ غضنفر میگه: نمی‌دونم، هنوز پولدار نشده!",
    "معلم: احمد، چرا مشقاتو ننوشتی؟ احمد: آقا اجازه، پریشب خواب دیدم نوشتم!",
    "یه نفر از دوستش می‌پرسه: زن گرفتی؟ میگه: آره. می‌پرسه: خوشحالی؟ میگه: آره، خیلی! فقط کاش زودتر می‌گرفتم!",
    "یه روز یه نفر میره دندون‌پزشکی، میگه: آقا این دندونم درد می‌کنه. دکتر میگه: خب بکشیمش؟ میگه: نه بابا! من که باهاش کاری ندارم!",
    "غضنفر میره کلاس رانندگی، میگه: آقا من فقط می‌خوام دور بزنم! مربی میگه: پس بیا یه ماشین دوربزن بردار!",
    "معلم: بچه‌ها، بگید ببینم، فرق سگ با گربه چیه؟ شاگرد: گربه میو میو می‌کنه، سگ میو میو نمی‌کنه!",
    "یه نفر میگه: همیشه به بزرگترت احترام بذار. میگن: اگه بزرگترت دیوونه بود چی؟ میگه: پس بهش احترام دیوانه‌وار بذار!",
    "یه روز یه مورچه میره روی فیله، میگه: وای! چه ترافیکی!",
    "ترکه میره رستوران، میگه: آقا یه کباب کوبیده بده. گارسون میگه: برنج باهاش؟ میگه: نه بابا! با کباب!",
    "یه نفر میره دکتر، میگه: آقای دکتر، همیشه خسته‌ام. دکتر میگه: چقدر می‌خوابی؟ میگه: شبا!"
    "غضنفر میره پمپ بنزین، میگه: آقا یه بنزین بزنید که آب توش نباشه! پمپ‌چی میگه: پس از کجا بزنم؟",
    "بچه به مامانش میگه: مامان، چرا بابا همیشه دیر میاد خونه؟ مامان: آخه بابا کارش زیاده! بچه: پس چرا ما اینقدر فقیر هستیم؟",
    "یه روز یه اصفهانی میره خرید، فروشنده میگه: اینو ببر، اگه خوب نبود پس بیار. اصفهانی میگه: اگه خوب بود چی؟",
    "معلم: بچه‌ها، بزرگترین حیوون دنیا چیه؟ شاگرد: فیل. معلم: آفرین. حالا بگید ببینم چند تا گوش داره؟ شاگرد: دو تا، ولی خیلی بزرگه!",
    "یه نفر میره عطاری، میگه: آقا حنا دارید؟ عطار میگه: بله. مشتری میگه: مرسی!",
    "غضنفر میره خواستگاری، میگه: خانم، شما آشپزی بلدید؟ دختره میگه: بله! غضنفر میگه: پس آشپزخونه ما آشپز نداره!",
    "معلم: چرا خرگوش گوش‌هاش بلنده؟ شاگرد: آقا اجازه، آخه اگه کوتاه بود که خرگوش نبود، موش بود!",
    "دو تا رفیق تو بیابون گم میشن. یکیشون میگه: آب نداریم! اون یکی میگه: نگران نباش، من یه چاقو دارم!",
    "یه روز یه مرده میره پیش روانشناس، میگه: آقای دکتر، من همیشه فکر می‌کنم مرغم. روانشناس میگه: چند وقته؟ مرده: از وقتی که جوجه بودم!",
    "ترکه میره لب دریا، میگه: عجب دریای آرامی! یه موج میاد میگه: آقا ما که با هم رفیقیم، چرا فحش میدی؟",
    "غضنفر میره ماهی‌گیری، هرچی قلاب میندازه ماهی نمی‌گیره. میگه: خب، انگار امروز ماهی‌ها گرسنه نیستن!",
    "معلم: بچه‌ها، بگید ببینم، اگر من ۵ تا سیب داشته باشم و ۲ تاشو بخورم، چند تا باقی میمونه؟ شاگرد: ۲ تا سیب گندیده!",
    "یه نفر میره مغازه، میگه: آقا این لباس چقدره؟ فروشنده میگه: ۱۰ هزار تومن. میگه: چرا اینقدر گرونه؟ فروشنده میگه: آخه مارک داره! میگه: خب، مارکشو بکنید!",
    "غضنفر میره مسابقه دو، نفر آخر میشه. میگن: چرا عقب افتادی؟ میگه: آخه به من گفتن تا خط پایان بدو!",
    "یه روز یه لره رو می‌برن اتاق عمل، پرستار میگه: بیهوشت کنیم؟ میگه: نه بابا! خودمم همین الان بیهوشم!",
    "بچه به باباش: بابا، امروز تو مدرسه معلم از ما خواست یه جمله با 'دیروز' بگیم. من گفتم 'دیروز به دنیا اومدم'. بابا: آفرین! بچه: معلم گفت اشتباهه. بابا: چرا؟ بچه: آخه دیروز به دنیا اومدم!",
    "دو نفر با هم دعواشون میشه. یکیشون میگه: منو می‌شناسی؟ اون یکی میگه: نه. میگه: پس خوش به حالت!",
    "یه روز یه نفر میره دزدی، میره تو خونه می‌بینه پلیس‌ها اونجان. میگه: آقا سلام! چی شده اینجا؟",
    "غضنفر میره دکتر، میگه: آقای دکتر، من یه مشکلی دارم. دکتر میگه: چیه؟ غضنفر میگه: همه فکر می‌کنن من دیوونه‌ام!",
    "معلم: بچه‌ها، وقتی ما چیزی رو از دست میدیم، چی باید بگیم؟ شاگرد: خدا نکنه!",
    "یه نفر میگه: زندگی مثل یه ستابه! میگن: چرا؟ میگه: آخه هرچی به جلوتر میری، سخت‌تر میشه!",
    "یه روز یه آقا میره رستوران. گارسون میگه: چی میل دارید؟ میگه: یه غذای رژیمی. گارسون میگه: چشم. میگه: با نوشابه و پیتزا!",
    "ترکه میره مغازه، میگه: آقا یه جفت جوراب بدین. فروشنده میگه: چه سایزی؟ ترکه میگه: اندازه دو تا پا!",
    "غضنفر میره پارک، می‌بینه یه نفر داره رو چمنا می‌خوابه. میگه: آقا اینجا خوابیدن ممنوعه! یارو میگه: من که بیدارم!",
    "معلم: بچه‌ها، چرا اردک‌ها شنا می‌کنن؟ شاگرد: آقا اجازه، آخه اگه شنا نکنن، غرق میشن!",
    "یه نفر میره رستوران، میگه: آقا یه همبرگر بدین که توش پنیر نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: پنیر!",
    "بچه به باباش: بابا، ما چرا نمی‌ریم خارج؟ بابا: آخه ما ویزا نداریم! بچه: خب یه ویزا بگیر!",
    "یه روز یه نفر میره کوه، میبینه یه مار داره میره تو سوراخ. میگه: وای! چرا مار سوراخشو نمی‌بنده؟",
    "غضنفر میره پلیس، میگه: آقا منو دزدیدن! پلیس میگه: چی دزدیدن؟ غضنفر میگه: نمی‌دونم، هنوز نگفته!",
    "معلم: چرا ما به ماه نگاه می‌کنیم؟ شاگرد: آقا اجازه، آخه اگه نگاه نکنیم، میفته پایین!",
    "یه نفر میره مغازه کامپیوتر، میگه: آقا یه فلش مموری دارید؟ فروشنده میگه: چند گیگ؟ میگه: نمی‌دونم، توش چقدر جا میشه؟",
    "دو تا رفیق با هم راه میرن. یکیشون میگه: ساعت چنده؟ اون یکی میگه: نمیدونم، گوشیم شارژ نداره!",
    "یه روز یه نفر میره تو حموم، میبینه یه مارمولک تو حمومه. میگه: اه! اینجا که حموم عمومی نیست!",
    "غضنفر میره پیش قاضی، میگه: آقا من می‌خوام طلاق بگیرم! قاضی میگه: چرا؟ غضنفر میگه: آخه زنم با من حرف نمیزنه!",
    "معلم: بچه‌ها، بگید ببینم، اگر یه نفر تو بیابون گم بشه، چیکار باید بکنه؟ شاگرد: باید گوشی موبایلش رو شارژ کنه!",
    "یه نفر میگه: زندگی مثل یه سیب زمینیه! میگن: چرا؟ میگه: آخه هرچی میپزیش، نرم‌تر میشه!",
    "یه روز یه ماهیگیر میره ماهیگیری. ماهی رو میگیره، ماهی میگه: آقا منو ول کن، من زن و بچه دارم! ماهیگیر میگه: منم ماهیگیرم، زن و بچه دارم!",
    "ترکه میره قصابی، میگه: آقا گوشت گوسفند دارید؟ قصاب میگه: بله. ترکه میگه: مرسی!",
    "غضنفر میره دکتر، میگه: آقای دکتر، من همیشه احساس می‌کنم که دارم می‌میرم! دکتر میگه: خب، نمیمیری!",
    "معلم: بچه‌ها، اگر من ۳ تا تخم مرغ داشته باشم و ۲ تاشو بشکنم، چند تا باقی میمونه؟ شاگرد: یکیش سالم، دو تا شکسته!",
    "یه نفر میره سوپر مارکت، میگه: آقا یه بستنی. سوپر مارکتی میگه: وانیلی؟ میگه: نه، تو یخچال!",
    "بچه به مامانش: بابا، چرا هر وقت مهمون میاد، تو یه جور دیگه حرف می‌زنی؟ مامان: آخه مهمون غریبه است! بچه: پس چرا به من غریبه‌ها رو معرفی نمی‌کنی؟",
    "یه روز یه نفر میره دزدی. وارد خونه میشه، میبینه همه خوابن. میگه: اه! دزد از من جلوتر بوده!",
    "غضنفر میره رستوران، میگه: آقا یه سوپ بده که توش هیچ سبزیجاتی نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: گوشت!",
    "معلم: بچه‌ها، بگید ببینم، وقتی می‌خوایم از یه نفر تشکر کنیم، چی باید بگیم؟ شاگرد: ممنونم!",
    "یه نفر میگه: همیشه حرف راست رو بزن. میگن: اگه حرف راست رو زدی و دعوا شد چی؟ میگه: خب، دروغ بگو!",
    "یه روز یه مورچه میره روی موز، میگه: وای! چه سرسره‌ای!",
    "ترکه میره رستوران، میگه: آقا یه نوشابه بدین. گارسون میگه: با غذا؟ میگه: نه بابا! با بطری!",
    "غضنفر میره پارک، میبینه یه نفر داره گل‌ها رو بو می‌کنه. میگه: آقا گل‌ها رو بو نکنید، ممنوعه! یارو میگه: من که دارم نفس می‌کشم!",
    "معلم: بچه‌ها، چرا مورچه ها اینقدر کار می‌کنن؟ شاگرد: آقا اجازه، آخه اگه کار نکنن، بیکار میشن!",
    "یه نفر میره رستوران، میگه: آقا یه ساندویچ بده که توش هیچ سسی نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: سس!",
    "بچه به باباش: بابا، چرا همیشه من باید ظرف‌ها رو بشورم؟ بابا: آخه تو کوچولوتری! بچه: پس چرا تو کوچولوتر نیستی؟",
    "یه روز یه نفر میره تو حیاط، میبینه یه گنجشک داره می‌پره. میگه: اه! چرا گنجشک پر نداره؟",
    "غضنفر میره پلیس، میگه: آقا من گم شدم! پلیس میگه: کجا گم شدی؟ غضنفر میگه: نمی‌دونم، هنوز پیدا نشدم!",
    "معلم: بچه‌ها، بگید ببینم، اگر یه نفر تو دریا غرق بشه، چیکار باید بکنه؟ شاگرد: باید شنا کنه!",
    "یه نفر میره مغازه لباس‌فروشی، میگه: آقا این لباس اندازه‌ام میشه؟ فروشنده میگه: بله! میگه: چقدر؟",
    "دو تا رفیق با هم میرن استخر. یکیشون میگه: آب سرده! اون یکی میگه: نگران نباش، الان گرم میشه!",
    "یه روز یه نفر میره تو جنگل، میبینه یه خرس داره میوه میخوره. میگه: اه! خرس گیاهخوار شده!",
    "غضنفر میره پیش قاضی، میگه: آقا من می‌خوام طلاق بگیرم! قاضی میگه: چرا؟ غضنفر میگه: آخه زنم با من حرف نمیزنه!",
    "معلم: بچه‌ها، بگید ببینم، وقتی می‌خوایم به یه نفر کمک کنیم، چی باید بگیم؟ شاگرد: کمک!",
    "یه نفر میگه: زندگی مثل یه لوبیاست! میگن: چرا؟ میگه: آخه هرچی می‌خوریش، باد می‌کنی!",
    "یه روز یه ماهیگیر میره ماهیگیری. ماهی رو میگیره، ماهی میگه: آقا منو ول کن، من زن و بچه دارم! ماهیگیر میگه: منم ماهیگیرم، زن و بچه دارم!",
    "ترکه میره قصابی، میگه: آقا گوشت بره دارید؟ قصاب میگه: بله. ترکه میگه: مرسی!",
    "غضنفر میره دکتر، میگه: آقای دکتر، من همیشه احساس می‌کنم که دارم می‌میرم! دکتر میگه: خب، نمیمیری!",
    "معلم: بچه‌ها، اگر من ۴ تا سیب داشته باشم و ۲ تاشو پرت کنم، چند تا باقی میمونه؟ شاگرد: ۲ تا سیب له شده!",
    "یه نفر میره سوپر مارکت، میگه: آقا یه بستنی. سوپر مارکتی میگه: شکلاتی؟ میگه: نه، رنگی!",
    "بچه به باباش: بابا، چرا هر وقت من حرف می‌زنم، تو داد می‌زنی؟ بابا: آخه تو حرف نمی‌زنی، غر می‌زنی!",
    "یه روز یه نفر میره دزدی. وارد خونه میشه، میبینه سگ خونه بیداره. میگه: اه! نگهبان گذاشته!",
    "غضنفر میره رستوران، میگه: آقا یه آب بیارید که توش هیچ یخ نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: یخ!",
    "معلم: بچه‌ها، بگید ببینم، وقتی می‌خوایم از یه نفر عذرخواهی کنیم، چی باید بگیم؟ شاگرد: ببخشید!",
    "یه نفر میگه: همیشه راستگو باش. میگن: اگه راستگو بودی و زندان رفتی چی؟ میگه: خب، دروغ بگو!",
    "یه روز یه مورچه میره روی کیک، میگه: وای! چه قندی!",
    "ترکه میره رستوران، میگه: آقا یه لیوان آب بدین. گارسون میگه: با یخ؟ میگه: نه بابا! با لیوان!",
    "غضنفر میره پارک، میبینه یه نفر داره روی نیمکت میخوابه. میگه: آقا اینجا خوابیدن ممنوعه! یارو میگه: من که دارم فکر می‌کنم!",
    "معلم: بچه‌ها، چرا ماهی‌ها شنا می‌کنن؟ شاگرد: آقا اجازه، آخه اگه شنا نکنن، می‌میرن!",
    "یه نفر میره رستوران، میگه: آقا یه ساندویچ بده که توش هیچ گوشتی نداشته باشه. گارسون میگه: پس چی داشته باشه؟ میگه: گوشت!",
    "بچه به باباش: بابا، چرا همیشه تو باید تلویزیون ببینی؟ بابا: آخه من بزرگترم! بچه: پس چرا من کوچولوترم؟",
    "یه روز یه نفر میره تو کوچه، میبینه یه گربه داره راه میره. میگه: اه! چرا گربه لباس نداره؟",
    "غضنفر میره پلیس، میگه: آقا من ماشینم رو گم کردم! پلیس میگه: کجا گم کردی؟ غضنفر میگه: نمی‌دونم، هنوز پیدا نکردم!",
    "معلم: بچه‌ها، بگید ببینم، اگر یه نفر تو هواپیما سقوط کنه، چیکار باید بکنه؟ شاگرد: باید بپره!",
    "یه نفر میره مغازه کفش‌فروشی، میگه: آقا این کفش اندازه‌ام میشه؟ فروشنده میگه: بله! میگه: چند تا؟",
    "دو تا رفیق با هم میرن کوه. یکیشون میگه: خسته‌ام! اون یکی میگه: نگران نباش، الان می‌رسیم!",
    "یه روز یه نفر میره تو خونه، میبینه یه مگس رو دیوار نشسته. میگه: اه! مگس چرا تلویزیون نگاه می‌کنه؟",
    "غضنفر میره پیش قاضی، میگه: آقا من می‌خوام طلاق بگیرم! قاضی میگه: چرا؟ غضنفر میگه: آخه زنم چاق شده!",
    "معلم: بچه‌ها، بگید ببینم، وقتی می‌خوایم به یه نفر سلام کنیم، چی باید بگیم؟ شاگرد: سلام!",
    "یه نفر میگه: زندگی مثل یه پرتقاله! میگن: چرا؟ میگه: آخه هرچی می‌خوریش، پوستش میمونه!",
    "یه روز یه ماهیگیر میره ماهیگیری. ماهی رو میگیره، ماهی میگه: آقا منو ول کن، من بوی گند میدم! ماهیگیر میگه: منم ماهیگیرم، بو میدم!",
    "ترکه میره قصابی، میگه: آقا گوشت مرغ دارید؟ قصاب میگه: بله. ترکه میگه: مرسی!",
    "غضنفر میره دکتر، میگه: آقای دکتر، من همیشه احساس می‌کنم که دارم می‌پرسم! دکتر میگه: خب، نمیپرسی!",
    "معلم: بچه‌ها، اگر من ۲ تا مداد داشته باشم و یکی‌اشو بشکنم، چند تا باقی میمونه؟ شاگرد: یکیش سالم، یکیش شکسته!",
    "یه نفر میره سوپر مارکت، میگه: آقا یه بستنی. سوپر مارکتی میگه: توت‌فرنگی؟ میگه: نه، بستنی!"
],

# === لیست فال‌های حافظ (100 مورد) ===
"فال حافط": [
    "ای صاحب فال، غمگین مباش که عاقبت کار تو به خیر و صلاح است. صبور باش و به خداوند توکل کن.",
    "فال شما نشان از آینده‌ای روشن و پر امید دارد. موانع برطرف شده و آرزوهایتان برآورده می‌شود.",
    "در کار خود ثابت‌قدم باش و از تغییر نترس. با تلاش و کوشش به مقصود خواهی رسید.",
    "این فال نشانه‌ی گشایش در امور و پیروزی بر دشمنان است. اما از غرور بپرهیز و شکرگزار باش.",
    "دلت را به دریا بزن و از شک و تردید رها شو. فرصتی طلایی در راه است که نباید آن را از دست بدهی.",
    "ای دوست! در این راه با کسانی مواجه می‌شوی که قصد فریب تو را دارند. هوشیار باش و به هر کسی اعتماد مکن.",
    "روزگار به کام تو خواهد شد، به شرط آنکه از کینه و حسد دوری کنی و دلت را پاک نگه داری.",
    "فصلی نو در زندگی‌ات آغاز می‌شود. فرصت‌های جدیدی در راه است که تو را به سوی موفقیت هدایت می‌کند.",
    "به زودی خبرهای خوشی به تو می‌رسد که باعث شادی و آرامش قلبت می‌شود. آماده باش تا از آن بهره‌مند شوی.",
    "صبر و شکیبایی کلید موفقیت توست. هر کاری را با حوصله انجام دهی، نتیجه‌ی بهتری خواهی گرفت.",
    "از گذشته درس بگیر و به آینده امیدوار باش. راهی که در پیش داری، به سعادت و نیک‌بختی ختم می‌شود.",
    "این فال نشانه‌ی وصال با معشوق و رسیدن به آرزویی دیرینه است. قدر این نعمت را بدان.",
    "در برابر سختی‌ها مقاومت کن که پس از هر دشواری، آسانی و گشایش خواهد بود.",
    "نیت شما خیر است و به مراد دل خواهید رسید. فقط کافی است با اراده و پشتکار ادامه دهید.",
    "فال شما به معنی پایان دوران سختی و آغاز آرامش و آسایش است. شادمان باش!",
    "با توکل به خدا و تلاش بی‌وقفه، به هر آنچه که در دل داری خواهی رسید. مسیر روشن است.",
    "ای مسافر! سفر تو پر خیر و برکت است. به زودی به مقصد می‌رسی و کامیاب می‌شوی.",
    "این فال نوید بخش روزهای خوب و اتفاقات مبارک است. دلت را به نور امید روشن کن.",
    "در جستجوی گمشده‌ای هستی؟ به زودی آن را خواهی یافت و دلت آرام می‌گیرد.",
    "عشق در راه است و زندگی‌ات را دگرگون می‌کند. خود را برای تجربه‌ای شیرین آماده کن.",
    "از حسودان بر حذر باش، اما نگران نباش که گزندی به تو نخواهد رسید. خداوند نگهدار توست.",
    "فال شما می‌گوید که رازت را فاش مکن و در هر کاری محتاط باش تا به مقصد برسی.",
    "در این راه، دوستانی وفادار و یاورانی باوفا خواهی یافت. قدر آنها را بدان.",
    "اندوه مخور که دوره‌ی غم به پایان رسیده و زمان شادی و خرمی فرا رسیده است.",
    "آرزویی داری که به زودی برآورده می‌شود. به نیت خود ایمان داشته باش و تلاش کن.",
    "به زودی به مقصود خود می‌رسی و از بخت خود خشنود خواهی شد. مبارک باد این کامیابی.",
    "این فال نشانه‌ی سفر است. سفری پر برکت و پر سود که زندگی‌ات را تغییر می‌دهد.",
    "از گذشته درس بگیر و به آینده امیدوار باش. راهی روشن در پیش روی توست.",
    "در کار خود موفق می‌شوی، اما از تکبر بپرهیز و همیشه فروتن باش.",
    "به زودی به آنچه در دل داری می‌رسی. صبور باش و از درگاه حق ناامید مشو.",
    "فال شما می‌گوید که به زودی به مراد دل خواهید رسید و از رنج و محنت رها می‌شوید.",
    "در هر کاری که قصد آن را داری، موفق خواهی شد. توکلت به خدا باشد.",
    "این فال نوید بخش پیروزی بر دشمنان و رسیدن به آرامش خاطر است.",
    "به زودی خبر خوشی به تو می‌رسد که دلت را شاد می‌کند. آماده‌ی شنیدن آن باش.",
    "در راه عشق، استوار باش. سختی‌ها می‌گذرند و وصال نزدیک است.",
    "از افراد بدخواه دوری کن که قصد زیان رساندن به تو را دارند. هوشیار باش.",
    "فال شما به معنی گشایش در کارها و حل مشکلات است. دلت آرام می‌گیرد.",
    "به زودی به آرزویی دیرینه خود می‌رسی. شکرگزار باش و قدر این نعمت را بدان.",
    "در راه حق قدم بردار که خداوند یار و یاور توست و تو را به مقصد می‌رساند.",
    "این فال نشانه‌ی خوشبختی و سعادت در زندگی توست. آینده‌ای روشن در انتظار توست.",
    "از سختی‌ها نترس که آنها پل‌های رسیدن به موفقیت هستند. ثابت‌قدم باش.",
    "فال شما می‌گوید که به زودی از غم و اندوه رها می‌شوی و دلت شادمان می‌شود.",
    "در برابر وسوسه‌ها مقاومت کن و راه راست را برگزین. موفقیت در همین راه است.",
    "به زودی به آنچه در دل داری می‌رسی و زندگی‌ات پر از شادی و آرامش می‌شود.",
    "این فال نوید بخش ازدواج یا وصال با یاری باوفا است. مبارک باد این پیوند.",
    "در کار خود ثابت‌قدم باش و از ناامیدی دوری کن. پیروزی نزدیک است.",
    "فال شما به معنی رهایی از زندان غم و رسیدن به آزادی و آرامش است.",
    "با توکل به خدا و تلاش بی‌وقفه، به آرزوهای بزرگت خواهی رسید.",
    "این فال نشانه‌ی پایان دوران تاریکی و آغاز روزهای پر نور و امید است.",
    "به زودی هدیه‌ای گرانبها دریافت می‌کنی که دلت را شاد می‌کند. منتظر باش.",
    "در برابر سختی‌ها مقاومت کن. آنها زودگذرند و تو قوی‌تر از آنی که فکر می‌کنی.",
    "فال شما می‌گوید که به زودی به مقصود خود می‌رسی و از نتیجه کار راضی خواهی بود.",
    "در این راه، از افراد منفی دوری کن و با کسانی همراه شو که انرژی مثبت دارند.",
    "به زودی خبری از یک دوست قدیمی به تو می‌رسد که باعث شادی تو می‌شود.",
    "این فال نشانه‌ی شروع یک دوره‌ی پر رونق مالی و فراوانی نعمت است.",
    "در کار خود دقیق باش و به جزئیات توجه کن. موفقیت در همین توجه است.",
    "فال شما به معنی رسیدن به آرامش درونی و یافتن صلح با خود است.",
    "با صبر و حوصله، مشکلات حل خواهند شد و راه برایت هموار می‌شود.",
    "این فال نوید بخش رسیدن به مقصود از طریق کمک و یاری دوستان است.",
    "به زودی به سفری می‌روی که پر از تجربیات جدید و آموزنده است.",
    "از فرصت‌هایی که در راه است نهایت استفاده را ببر. آنها تکرار نخواهند شد.",
    "در برابر کسانی که قصد آزار تو را دارند، سکوت کن و به خدا واگذار کن.",
    "فال شما می‌گوید که به زودی به آنچه آرزویش را داری می‌رسی و شادمان می‌شوی.",
    "در راه خود ثابت‌قدم باش و از تغییر مسیر نترس. پایان راه روشن است.",
    "این فال نشانه‌ی پیروزی تو در یک رقابت یا مسابقه است. اعتماد به نفس داشته باش.",
    "به زودی به موفقیت بزرگی در کار یا تحصیل خود دست خواهی یافت.",
    "از گذشته دل بکن و به آینده‌ای پر از امید و روشنایی فکر کن.",
    "فال شما به معنی رسیدن به آرزویی است که فکر می‌کردی محال است.",
    "با تلاش و کوشش، به هر آنچه می‌خواهی می‌رسی. ناامیدی ممنوع است.",
    "این فال نوید بخش یک اتفاق غیرمنتظره و بسیار خوشحال‌کننده است.",
    "به زودی به ثروت و مکنت می‌رسی، اما یادت باشد که دلت را از خدا جدا نکنی.",
    "در برابر مشکلات قوی باش. آنها تو را آبدیده‌تر می‌کنند.",
    "فال شما می‌گوید که به زودی به آرزوی وصال با یار خود می‌رسی.",
    "به خودت ایمان داشته باش و از هیچکس کمتر نیستی. تو لایق بهترین‌ها هستی.",
    "این فال نشانه‌ی یافتن یک گنج پنهان یا یک فرصت مالی بزرگ است.",
    "در کار خود خلاق باش و از ایده‌های جدید استقبال کن. موفقیت در خلاقیت توست.",
    "فال شما به معنی آرامش روحی و رهایی از دغدغه‌های ذهنی است.",
    "به زودی به سفری معنوی می‌روی که روح تو را جلا می‌بخشد.",
    "از هر فرصتی برای یادگیری و رشد استفاده کن. علم و دانش راه توست.",
    "در برابر بدگویان سکوت کن و به راه خود ادامه بده. حقیقت روشن می‌شود.",
    "فال شما می‌گوید که به زودی به آنچه در دل داری خواهی رسید و از آن لذت می‌بری.",
    "به زودی یک معجزه در زندگی‌ات رخ می‌دهد که تو را شگفت‌زده می‌کند.",
    "این فال نشانه‌ی پایان دوران تنهایی و آغاز روابطی عمیق و پایدار است.",
    "در هر کاری که می‌کنی، نیت خیر داشته باش. نیت پاک تو را به مقصد می‌رساند.",
    "فال شما به معنی رسیدن به آرامش و صلح پس از یک دوره پر تلاطم است.",
    "به زودی خبرهای خوبی از راه دور به تو می‌رسد که باعث شادی تو می‌شود.",
    "از خودت مراقبت کن و به سلامتی‌ات اهمیت بده. سلامتی مهم‌ترین دارایی توست.",
    "این فال نوید بخش یک ازدواج موفق و زندگی مشترکی پر از عشق است.",
    "در برابر سختی‌ها خم نشو. قدرت تو بیشتر از آن چیزی است که فکر می‌کنی.",
    "فال شما می‌گوید که به زودی به آرزوی داشتن فرزند یا نوه‌ی خود می‌رسی.",
    "به طبیعت نزدیک شو و از زیبایی‌های آن لذت ببر. آرامش در طبیعت است.",
    "این فال نشانه‌ی شروع یک مسیر شغلی جدید و بسیار موفق است.",
    "در کار خود متعهد باش و هرگز از تلاش دست نکش. موفقیت در گرو پشتکار توست.",
    "فال شما به معنی رهایی از یک مشکل حقوقی یا یک اختلاف است.",
    "به زودی یک دوست قدیمی را ملاقات می‌کنی که خاطرات خوبی را زنده می‌کند.",
    "این فال نوید بخش یک سفر زیارتی و معنوی است که روح تو را آرام می‌کند.",
    "در زندگی خود تعادل را رعایت کن. افراط و تفریط تو را از مسیر خارج می‌کند.",
    "فال شما می‌گوید که به زودی به آرزوی خرید خانه یا ملکی جدید می‌رسی.",
    "از کمک خواستن نترس. دوستان و نزدیکانت آماده‌اند تا به تو یاری رسانند.",
    "این فال نشانه‌ی پایان دوران بی‌قراری و رسیدن به آرامش درونی است.",
    "به زودی به شهرت و محبوبیت می‌رسی. از این نعمت برای کارهای خیر استفاده کن.",
    "در برابر کسانی که به تو حسادت می‌کنند، مهربان باش. مهربانی تو را بزرگ می‌کند.",
    "فال شما به معنی رسیدن به حکمت و بینش عمیق‌تر در زندگی است.",
    "به زودی به سفری برای تحصیل یا کسب دانش می‌روی که زندگی‌ات را دگرگون می‌کند."
],
 "عه": ["اره ","ارع"],
 

# === لیست چیستان‌ها (100 مورد) ===
"معما": ["ان چیست که هرچه بیشتر از آن برمی‌داری، بزرگ‌تر می‌شود؟چاله",
],
"سنگ": ["سنگ","کاغذ","قیچی"],

"کاغذ": ["سنگ","کاغذ","قیچی"],

"قیچی": ["سنگ","کاغذ","قیچی"],

"بازی": ["سنگ /کاغذ / قیچی>تاس>عدد"],

"چیستان": ["1. چیزی است که مال توست ولی بیشتر دیگران از آن استفاده می‌کنند؟ جواب: اسم تو",
"2. چه چیزی هر چه بیشتر از آن برداری بیشتر جا برایش باز می‌شود؟ جواب: نفس یا هوا",
"3. چه چیزی همیشه جلوتر از تو می‌رود اما هرگز دیده نمی‌شود؟ جواب: آینده",
"4. چی چیزی همیشه پایین می‌آید ولی بالا نمی‌رود؟ جواب: باران",
"5. چه چیزی شکسته می‌شود اما صدا ندارد؟ جواب: دل یا قول",
"6. یک مرد 10 بار از ساختمان می‌افتد اما آسیبی نمی‌بیند. چرا؟ جواب: چون از طبقه اول می‌افتد!",
"7. پر از سوراخ است اما می‌تواند آب نگه دارد؟ جواب: اسفنج",
"8. چه پرنده‌ای با سه حرف پرواز نمی‌کند؟ جواب: مرغ",
"9. چه چیزی در آب می‌افتد اما خیس نمی‌شود؟ جواب: سایه",
"10. ماشینم سبز است درخت نیست. چهار چرخ دارد اما دوچرخه نیست. چیه؟ جواب: ماشین اسباب‌بازی",
"11. شب‌ها دنبالش می‌دوند روزها فراموشش می‌کنند چیه؟ جواب: خواب",
"12. نه آدمه نه حیوانه با این حال همیشه دنباله داره چیه؟ جواب: بادبادک",
"13. همه جا هست ولی نمی‌تونی ببینیش؟ جواب: هوا",
"14. وقتی داریش نمی‌فهمی وقتی از دست می‌ره تازه می‌فهمی چقدر باارزشه؟ جواب: سلامتی",
"15. بی‌صدا میاد بدون پا حرکت می‌کنه، نامرئیه  بیشتر می‌کِشی، کوچکتر می‌شه؟ جواب: نخ",
"17. اگر نیم سیب را از یک سیب کم کنیم چی می‌مونه؟ جواب: نیم دیگه‌اش",
"18. چه چیزی صبح با چهار پا، ظهر با دو پا و شب با سه پا راه می‌رود؟ جواب: انسان",
"19. از تو هست ولی نمی‌تونی ببینیش؟ جواب: روح",
"20. زنگ می‌زنن، بازش نمی‌کنی با این حال خوشحال می‌شی؟ جواب: زنگ گوشی",
"21. همیشه راه می‌ره ولی هیچ‌وقت نمی‌ره؟ جواب: ساعت",
"22. چیه که از هر طرف بخونی یکسانه؟ جواب: توت",
"23. درسته که راه می‌ره اما پا نداره؟ جواب: رودخانه",
"24. هر چی بیشترش کنی کوچکتر می‌شه؟ جواب: سوراخ",
"25. یه چیزی هست که وقتی ازت می‌پرسن داری یا نه اگه جواب بدی، دیگه نداری! جواب: راز",
"26. اگر 2=1، 4=2، 6=3، 8=4، پس 10=? جواب: 5","27. عددی داریم که وقتی ارقامش رو جابجا کنیم باز هم همونه؟ جواب: 222",
"28. عددی که اگر ضربدر خودش کنیم و 10 تا بهش اضافه کنیم میشه 26؟ جواب: 4",
"29. ساعتی هست که دو بار عقربه‌ها روی هم قرار می‌گیرن؟ جواب: 12:00",
"30. دو پدر و دو پسر رفتن شکار، فقط 3 پرنده زدن، چطوری؟ جواب: پدربزرگ، پدر، پسر",
"31. اگر یک ماشین 60 کیلومتر را در یک ساعت بره، سرعتش چقدره؟ جواب: 60",
"32. عددی که تقسیم بر 2 بشه و جوابش 6 باشه؟ جواب: 12","33. 1+1 چند می‌شه اگه دو نفر, عاشق هم باشن؟ جواب: 1"
,"34. دو عدد که جمعشون 10 و تفاضلشون 2 هست؟ جواب: 6 و 4"
,"35. عددی که با جابجایی ارقامش تغییری نمی‌کنه؟ جواب: 121"
,"36. پنج تا سیب داری، دو تا برمی‌داری، چند تا داری؟ جواب: دو تا"
,"37. 10 تا شمع روشنه، 3 تا خاموش می‌کنی، چند تا می‌مونه؟ جواب: 3"
,"38. عددی دو رقمی که رقم دهگانش 3 برابر یکانش باشه؟ جواب: 31 یا 62"
,"39. عددی که بر خودش تقسیم بشه، خودش می‌شه؟ جواب: 1"
,"40. سوزنی از طبقه 10 بیفته، می‌شکنه یا نه؟ جواب: نه"
,"41. بین 1 تا 100 چند تا 9 هست؟ جواب: 20","42. 5 تا نون داریم، 2 نفر هستن. چطور تقسیم کنیم؟ جواب: هر نفر 2.5 تا"
,"43. وقتی 4 و 4 رو ضرب کنی چی می‌شه؟ جواب: 16","44. ماشینی با سرعت 80، در 2 ساعت چند کیلومتر می‌ره؟ جواب: 160"
,"45. ساعت 7 بری بیرون و ساعت 8 برگردی، چقدر بیرون بودی؟ جواب: 1 ساعت","46. 3 نفر 30 تومن دادن، 25 تومن غذا شد، 5 تومن باقی، دو تومن به هرکدوم برگشت. چی شد؟ جواب: خطای محاسباتی عمدی"
,"47. اگر امروز دوشنبه باشه، 100 روز بعد چه روزیه؟ جواب: چهارشنبه","48. 4 روز کار و 3 روز استراحت، چند درصد هفته کار کردیم؟ جواب: 57.14٪"
,"49. کدوم عدد انگلیسی بین 1 تا 10، با E شروع می‌شه؟ جواب: اینتر "
,"50. چند صفر در میلیون هست؟ جواب: 6"
,"51. مردی در خانه مرده و میز شکسته و لیوان آب کنارش است. چرا مرده؟ جواب: لیوان افتاده، ماهی مرده، صاحبش ناراحتی گرفته"
,"52. ساعت 8 خوابیدی و ساعت 9 زنگ گذاشتی، چند ساعت خوابیدی؟ جواب: 1 ساعت"
,"53. خانه‌ای با بخاری و یخچال باز و پنکه روشن، چرا گرم نیست؟ جواب: خانه یخچال است"
,"54. غواصی در بیابان پیدا شد. چرا؟ جواب: اشتباهاً توسط هواپیمای آب‌پاش برداشته شده"
,"55. خانه آتیش گرفته، اول کجا می‌ری؟ جواب: بیرون"
,"56. دزد شبانه وارد خانه شد، چراغ خاموش بود، چطور می‌دید؟ جواب: روز بود"
,"57. اتاقی با آتش، ببر، و برق، کدومو انتخاب می‌کنی؟ جواب: ببر – مرده"
,"58. پسری کنار جسد پدرش ایستاده بود، چرا سوالی نشد؟ جواب: پدرش مجسمه بود"
,"59. مردی از طبقه 20 پرید و زنده موند، چرا؟ جواب: از داخل آسانسور"
,"60. اتاق تاریک، یه کبریت داری، اول چی روشن می‌کنی؟ جواب: کبریت"
,"61. از کوه پرت شد ولی زنده موند، چرا؟ جواب: خواب دیده"],

    "emoji_responses": {
        "👋": ["سلام! چطوری؟", "های!", "خوش اومدی!"],
        "😂": ["😂😂" ,"😂😂😂","به چی میخندی مردک ","به چی میخندی بگو منم بخندم "],
        "🌹": ["مرسی!", "ممنون از لطفت!", "گل از خودته 🌹"],
        "❤️": ["عشق منی ❤️", "قربونت برم", "ممنون از محبتت"],
        "🙏": ["خواهش می‌کنم","قوبانت", "کاری نکردم!"],
        "👍": ["عالیه!", "خوبه!", "موافقم!"],
        "👎": ["اوکی", "باشه", "منم باهات مخالفم!"],
        "🔥": ["داغ!", "اتیشی!", "پر انرژی!"],
        "🥳": ["مبارکه!", "تبریک!"],
        "🥺": ["چیزی شده؟", "قربونت برم🥺", "چرا ناراحتی؟"],
          "😭": ["چیزی شده؟", "قربونت برم🥺", "چرا ناراحتی؟"],
           "🥹": ["چیزی شده؟", "قربونت برم🥺", "چرا ناراحتی؟"],
           "💔": ["چیزی شده؟", "قربونت برم🥺", "چرا ناراحتی؟"],
           "😭😭": ["چیزی شده؟", "قربونت برم🥺", "چرا ناراحتی؟"],
        "😂😂": ["😂😂" ,"😂😂😂","به چی میخندی مردک ","به چی میخندی بگو منم بخندم "],
         "😂😂😂": ["😂😂" ,"😂😂😂","به چی میخندی مردک ","به چی میخندی بگو منم بخندم "],
         
    }
}

# === بارگذاری داده‌ها هنگام شروع ربات ===
qa_data = load_qa_data()
welcomed_members_cache = load_welcomed_members()
group_rules = load_group_rules()

# بارگذاری کانفیگ اصلی (شامل ادمین‌ها و تنظیمات گروه‌ها)
config = load_config()
ADMIN_IDS = config["admin_ids"]
DEFAULT_CHANNEL_ID = config["default_channel_id"]
OPENWEATHER_API_KEY = config["openweathermap_api_key"]


print("                🇮🇷🇮🇷🇮🇷🇮🇷      به نام خدا      🇮🇷🇮🇷🇮🇷🇮🇷        ")
print("")
print("                ایدی سازنده در روبیکا @a120100")
print("")
print("                       ربات فعال میباشد ")
print("")
print("")
print("")


# === تابع بررسی اعضای جدید و خوش‌آمدگویی (برای کانال) ===
def run_check_new_members_sync():
    """تابعی برای اجرای check_new_members_channel به صورت همزمان برای زمان‌بند."""
    try:
        loop = asyncio.get_event_loop()
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

    loop.run_until_complete(check_new_members_channel())

async def check_new_members_channel():
    """بررسی و خوش‌آمدگویی اعضای جدید در کانال پیش‌فرض."""
    if not DEFAULT_CHANNEL_ID or DEFAULT_CHANNEL_ID == "YOUR_CHANNEL_ID_HERE":
        print("خطا: آیدی کانال پیش‌فرض برای بررسی اعضا تنظیم نشده است. لطفاً آن را تنظیم کنید.")
        return

    is_channel_active = config["group_settings"].get(DEFAULT_CHANNEL_ID, {}).get("bot_active", True)
    if not is_channel_active:
        print(f"کانال {DEFAULT_CHANNEL_ID} غیرفعال است. بررسی اعضا انجام نمی‌شود.")
        return

    print(f"شروع بررسی اعضای جدید کانال {DEFAULT_CHANNEL_ID}...")
    try:
        members_response = await bot.get_channel_members(object_guid=DEFAULT_CHANNEL_ID)
        current_member_guids = {member.user_guid for member in members_response.members}

        new_members = []
        for member_guid in current_member_guids:
            if member_guid not in welcomed_members_cache:
                new_members.append(member_guid)

        new_members_to_welcome = new_members[:10] # فقط 10 عضو جدید را در هر بار پردازش می‌کنیم

        if new_members_to_welcome:
            print(f"یافتن {len(new_members_to_welcome)} عضو جدید در کانال.")
            for member_guid in new_members_to_welcome:
                welcome_message = "ممنونیم که به کانال ما شهر قوچان پیوستید هر کمکی بود درخدمتم" # این پیام را می‌توانید قابل تنظیم کنید
                try:
                    await bot.send_message(object_guid=member_guid, text=welcome_message)
                    print(f"پیام خوش‌آمدگویی به {member_guid} در کانال ارسال شد.")
                    welcomed_members_cache.add(member_guid)
                except Exception as e:
                    print(f"خطا در ارسال پیام خوش‌آمدگویی به {member_guid} (کانال): {e}")
            save_welcomed_members(welcomed_members_cache)
        else:
            print("عضو جدیدی در کانال یافت نشد.")

    except Exception as e:
        print(f"خطا در بررسی اعضای کانال: {e}")

# === راه‌اندازی زمان‌بند (Scheduler) در یک ترد جداگانه ===
scheduler = BlockingScheduler()
scheduler.add_job(run_check_new_members_sync, 'interval', minutes=10)

def start_scheduler_in_thread():
    print("                    ربات درحال کار میباشد ")
    scheduler.start()


scheduler_thread = threading.Thread(target=start_scheduler_in_thread)
scheduler_thread.start()

# === هندلر اصلی پیام‌ها ===
@bot.on_message_updates()
async def updates(message: Updates):
    # این خط برای رفع خطای "used prior to global declaration" بسیار مهم است.
    global ADMIN_IDS, config, DEFAULT_CHANNEL_ID, OPENWEATHER_API_KEY, user_activity_stats, spam_tracking
    print("")
    print("")
    print("                              📩📩📩📩")

    user_guid = message.author_guid
    chat_id = message.object_guid

    # --- منطق تعیین اولین ادمین ---
    if not ADMIN_IDS:
        ADMIN_IDS.append(user_guid)
        config["admin_ids"] = ADMIN_IDS
        save_config(config)
        await message.reply("🎉🎉شما ادمین من ثبت شدی🎉🎉")
        print("")
        print(f"          ادمین ثبت شد  {user_guid}")
    # --- پایان منطق تعیین اولین ادمین ---

    # --- مدیریت رویداد ورود/خروج عضو (فقط در گروه) ---
    if chat_id.startswith('g'):
        group_setting = config["group_settings"].get(chat_id, {})
        welcome_message_enabled = group_setting.get("welcome_message_enabled", False)
        welcome_message_text = group_setting.get("welcome_message_text", "سلام [نام کاربر]! به گروه [نام گروه] خوش آمدی.")
        leave_message_enabled = group_setting.get("leave_message_enabled", False) # جدید
        leave_message_text = group_setting.get("leave_message_text", "خداحافظ [نام کاربر]! امیدواریم باز هم شما را ببینیم.") # جدید

        if message.event_type == 'Join':
            if welcome_message_enabled:
                try:
                    chat_info_response = await bot.get_chat_info_by_object_guid(object_guid=chat_id)
                    group_name = chat_info_response.chat.title if chat_info_response and chat_info_response.chat else "گروه"
                    
                    if user_guid:
                        user_info_response = await bot.get_user_info([user_guid])
                        new_member_name = user_info_response.users[0].first_name if user_info_response and user_info_response.users else "کاربر جدید"
                    else:
                        new_member_name = "کاربر جدید"

                    final_welcome_text = welcome_message_text.replace("[نام کاربر]", new_member_name).replace("[نام گروه]", group_name)
                    await bot.send_message(object_guid=chat_id, text=final_welcome_text)
                    print(f"پیام خوش‌آمدگویی برای {new_member_name} در گروه {group_name} ارسال شد.")
                except Exception as e:
                    print(f"خطا در ارسال پیام خوش‌آمدگویی به گروه: {e}")
            return # بلاک کردن پردازش بیشتر برای پیام Join
        elif message.event_type == 'Leave': # جدید: پیام خداحافظی
            if leave_message_enabled:
                try:
                    user_info_response = await bot.get_user_info([user_guid])
                    leaving_member_name = user_info_response.users[0].first_name if user_info_response and user_info_response.users else "کاربر"
                    final_leave_text = leave_message_text.replace("[نام کاربر]", leaving_member_name)
                    await bot.send_message(object_guid=chat_id, text=final_leave_text)
                    print(f"پیام خداحافظی برای {leaving_member_name} در گروه {chat_id} ارسال شد.")
                except Exception as e:
                    print(f"خطا در ارسال پیام خداحافظی به گروه: {e}")
            return # بلاک کردن پردازش بیشتر برای پیام Leave


    if not message.text:
        return

    lower_text = message.text.lower()

    target_id = chat_id

    if target_id not in qa_data:
        qa_data[target_id] = {}

    group_settings = config["group_settings"].get(chat_id, {})
    
    bot_active_in_chat = group_settings.get("bot_active", True)
    speaker_mode_active_in_chat = group_settings.get("speaker_mode_active", False)
    delete_links_enabled = group_settings.get("delete_links_enabled", True)
    delete_forwards_enabled = group_settings.get("delete_forwards_enabled", True)
    delete_ids_enabled = group_settings.get("delete_ids_enabled", True)
    class_mode_active = group_settings.get("class_mode_active", False) # جدید: حالت کلاس درس
    forbidden_words = group_settings.get("forbidden_words", []) # جدید: ضد فحش
    spam_protection_active = group_settings.get("spam_protection_active", False) # جدید: ضد اسپم
    allowed_forward_sources = group_settings.get("allowed_forward_sources", []) # جدید: فوروارد خاص

    # --- آمار فعالیت کاربران ---
    if chat_id not in user_activity_stats:
        user_activity_stats[chat_id] = {}
    if user_guid not in user_activity_stats[chat_id]:
        user_activity_stats[chat_id][user_guid] = {'message_count': 0, 'hello_count': 0, 'swear_count': 0}
    
    user_activity_stats[chat_id][user_guid]['message_count'] += 1
    if "سلام" in lower_text: # می‌توانید عبارات بیشتری را برای "سلام" اضافه کنید
        user_activity_stats[chat_id][user_guid]['hello_count'] += 1
    
    # برای ضد فحش:
    for word in forbidden_words:
        if word in lower_text:
            user_activity_stats[chat_id][user_guid]['swear_count'] += 1
            break # فقط یک بار برای هر پیام فحش حساب شود
    save_user_stats(user_activity_stats)
    # --- پایان آمار فعالیت کاربران ---

    # --- ضد اسپم ---
    if spam_protection_active and chat_id.startswith('g') and user_guid not in ADMIN_IDS:
        current_time = time.time()
        if user_guid not in spam_tracking:
            spam_tracking[user_guid] = {'last_message_time': current_time, 'message_count_in_window': 1}
        else:
            time_diff = current_time - spam_tracking[user_guid]['last_message_time']
            if time_diff < 5: # 5 ثانیه پنجره زمانی
                spam_tracking[user_guid]['message_count_in_window'] += 1
            else:
                spam_tracking[user_guid]['message_count_in_window'] = 1 # ریست کردن
            spam_tracking[user_guid]['last_message_time'] = current_time
        
        # آستانه اسپم: مثلا 4 پیام در 5 ثانیه
        if spam_tracking[user_guid]['message_count_in_window'] > 3:
            try:
                await message.delete() # حذف پیام
                # می‌توانید اینجا کاربر را سایلنت کنید یا محدودیت بیشتری اعمال کنید.
                # برای سایلنت کردن دائمی یا موقت نیاز به متدهای Rubika API است که rubpy شاید مستقیما نداشته باشد
                # اگر Rubpy متد restrict_member را داشت: await bot.restrict_member(chat_id, user_guid, time_limit_in_seconds)
                await bot.send_message(object_guid=chat_id, text=f"پیام تکراری ممنوع میباشد ")
                print(f"ااسپم از کاربر{user_guid}در{chat_id} تشخیص داده شد و پیام حذف شد.")
                spam_tracking[user_guid]['message_count_in_window'] = 0 # ریست بعد از اقدام
            except Exception as e:
                print(f"خطا در حذف پیام اسپم یا ارسال هشدار: {e}")
            return # جلوگیری از پردازش بیشتر پیام اسپم
    # --- پایان ضد اسپم ---


    # --- منطق حالت کلاس درس (Silent Mode) ---
    if class_mode_active and chat_id.startswith('g') and user_guid not in ADMIN_IDS:
        try:
            await message.delete()
            print(f"پیام کاربر غیرمجاز {user_guid} در حالت کلاس درس (گروه {chat_id}) حذف شد.")
            return # از ادامه پردازش پیام جلوگیری کنید
        except Exception as e:
            print(f"خطا در حذف پیام در حالت کلاس درس: {e}")
            # ادامه پردازش پیام در صورت عدم موفقیت در حذف
    # --- پایان منطق حالت کلاس درس ---

    # --- دستورات راهنما (اولویت بالا) ---
    if lower_text == "راهنما" or lower_text == "/help":
        help_text = """
سلام! من یک ربات برای پاسخ به سوالات شما هستم.

*دستورات عمومی (در گروه و پی‌وی):*
* راهنما / /help: این لیست دستورات را نمایش می‌دهد.
* لیست کلمات / /لیست_کلمات / کلمات من: لیست تمام سوالاتی که ربات در این چت یاد گرفته را نمایش می‌دهد.
* تاس: یک عدد تصادفی بین 1 تا 6 را پرتاب می‌کند.
* ساعت / /ساعت: ساعت فعلی ایران را نمایش می‌دهد.
* تاریخ / /تاریخ: تاریخ شمسی فعلی را نمایش می‌دهد.
* زمان / /زمان: تاریخ و ساعت فعلی ایران را نمایش می‌دهد.
* ارز / /ارز / نرخ ارز: نرخ لحظه‌ای ارز (دلار، یورو) و طلا را نمایش می‌دهد.
* /آب_و_هوا [نام شهر]: وضعیت آب و هوای شهر مورد نظر را نمایش می‌دهد (مثال: /آب_و_هوا تهران).
* وضعیت ربات / /وضعیت_ربات: آمار و وضعیت کلی ربات را نمایش می‌دهد.
* /بازی_سنگ_کاغذ_قیچی [سنگ/کاغذ/قیچی]: بازی سنگ کاغذ قیچی با ربات.

*دستورات مدیریتی (فقط برای مدیران):*
* پاکسازی داده ها / /پاکسازی_داده‌ها: تمام سوالات و پاسخ‌های یادگرفته شده در این چت را حذف می‌کند. (احتیاط! این عمل غیرقابل بازگشت است)
* یادگیر فعال: ربات را وارد حالت یادگیری می‌کند تا بتوانید به صورت مکالمه‌ای سوال و جواب اضافه کنید.
    * فرمت در حالت یادگیری: سوال شما|پاسخ1;پاسخ2
* یادگیر غیرفعال: ربات را از حالت یادگیری خارج می‌کند.
* /افزودن_پاسخ سوال|جواب1;جواب2: برای افزودن یک سوال و جواب جدید به ربات (روش مستقیم).
* /حذف_پاسخ سوال: برای حذف یک سوال و جواب از ربات.
* ربات فعال: ربات در گروه/کانال فعال شده و پاکسازی پیام‌ها (در گروه) و خوش‌آمدگویی اعضا (در کانال) را انجام می‌دهد.
* ربات غیرفعال: ربات در گروه/کانال غیرفعال شده و از انجام وظایف خود دست می‌کشد.
* سخنگو فعال: ربات در گروه شروع به پاسخگویی به کلمات کلیدی (سلام، خوبی، چالش، فال و...) می‌کند.
* سخنگو غیرفعال: ربات در گروه از پاسخگویی به کلمات کلیدی دست می‌کشد.
* /تنظیم_قوانین [متن قوانین]: (در گروه/کانال) قوانین چت را تنظیم می‌کند.
* /قوانین / قوانین: (در گروه/کانال) قوانین تنظیم شده چت را نمایش می‌دهد.
* /آمار_گروه / آمار گروه: (در گروه/کانال) آمار گروه/کانال (مانند تعداد اعضا) را نمایش می‌دهد.
* /ارسال_به_کانال متن_پیام: (فقط در پی‌وی) ارسال یک پیام به کانال پیش‌فرض.
* /افزودن_مدیر [GUID کاربر]: (فقط در پی‌وی) یک کاربر دیگر را به لیست مدیران اضافه می‌کند.
* /حذف_مدیر [GUID کاربر]: (فقط در پی‌وی) یک مدیر را از لیست مدیران حذف می‌کند.
* /لیست_مدیران: (فقط در پی‌وی) لیست تمام مدیران ربات را نمایش می‌دهد.
* /تنظیم_آیدی_کانال [آیدی کانال]: (فقط در پی‌وی) آیدی کانال پیش‌فرض ربات را تنظیم می‌کند.
* /تنظیم_کلید_آب_و_هوا [کلید API]: (فقط در پی‌وی) کلید API OpenWeatherMap را تنظیم می‌کند.

*دستورات جدید مدیریتی در گروه:*
* /تنظیم_پیام_خوش_آمد_گویی [متن]: (در گروه) تنظیم پیام خوش‌آمدگویی برای اعضای جدید. ([نام کاربر] و [نام گروه] جایگزین می‌شوند.)
* /خوش_آمد_گویی_گروه_فعال: (در گروه) فعال‌سازی پیام خوش‌آمدگویی برای اعضای جدید.
* /خوش_آمد_گویی_گروه_غیرفعال: (در گروه) غیرفعال‌سازی پیام خوش‌آمدگویی.
* /حذف_لینک_فعال: (در گروه) فعال‌سازی حذف خودکار لینک‌ها.
* /حذف_لینک_غیرفعال: (در گروه) غیرفعال‌سازی حذف خودکار لینک‌ها.
* /حذف_فوروارد_فعال: (در گروه) فعال‌سازی حذف خودکار پیام‌های فوروارد شده.
* /حذف_فوروارد_غیرفعال: (در گروه) غیرفعال‌سازی حذف خودکار پیام‌های فوروارد شده.
* /حذف_آیدی_فعال: (در گروه) فعال‌سازی حذف خودکار آیدی (مثل @username).
* /حذف_آیدی_غیرفعال: (در گروه) غیرفعال‌سازی حذف خودکار آیدی.
* کلاس فعال: (در گروه) فعال‌سازی حالت کلاس درس (فقط مدیران و معلم می‌توانند پیام ارسال کنند).
* کلاس غیر فعال: (در گروه) غیرفعال‌سازی حالت کلاس درس.
* /تنظیم_پیام_خداحافظی [متن]: (در گروه) تنظیم متن پیام خداحافظی هنگام ترک گروه. ([نام کاربر] جایگزین می‌شود.)
* پیام_خداحافظی_فعال: (در گروه) فعال‌سازی ارسال پیام خداحافظی.
* پیام_خداحافظی_غیرفعال: (در گروه) غیرفعال‌سازی ارسال پیام خداحافظی.
* /افزودن_کلمه_ممنوعه [کلمه]: (در گروه) افزودن یک کلمه به لیست کلمات ممنوعه (ضد فحش).
* /حذف_کلمه_ممنوعه [کلمه]: (در گروه) حذف یک کلمه از لیست کلمات ممنوعه.
* /لیست_کلمات_ممنوعه: (در گروه) نمایش لیست کلمات ممنوعه.
* ضداسپم فعال: (در گروه) فعال‌سازی سیستم ضد اسپم.
* ضداسپم غیرفعال: (در گروه) غیرفعال‌سازی سیستم ضد اسپم.
* امارش [شناسه کاربری/من]: (در گروه) نمایش آمار فعالیت کاربر در گروه.

*دستورات جدید (در گروه - برای فوروارد از کانال‌های خاص):*
* /مجاز_کردن_فوروارد_از [آیدی چت]: افزودن یک کانال/گروه به لیست منابع مجاز فوروارد.
* /ممنوع_کردن_فوروارد_از [آیدی چت]: حذف یک کانال/گروه از لیست منابع مجاز فوروارد.
* /لیست_فوروارد_مجاز: نمایش لیست کانال‌ها/گروه‌هایی که فوروارد از آن‌ها مجاز است.

*دستورات خصوصی (برای همه در پی‌وی):*
* سازنده / سازندت / غلامی: اطلاعات سازنده ربات را نمایش می‌دهد.
* تبلیغ / تعرفه: اطلاعات مربوط به هزینه‌های تبلیغات را نمایش می‌دهد.
* تبادل: وضعیت تبادل را اعلام می‌کند.
* کارت / شماره کارت: شماره کارت بانکی را ارائه می‌دهد.
* پست آزاد / آزاد / پست آخر: ربات با "اوکی" پاسخ می‌دهد.
* تخفیف: اطلاعات مربوط به تخفیف‌ها را اعلام می‌کند.
* کی اجرا میشه؟ / کی میزارین؟: زمان اجرای تبلیغات را مشخص می‌کند.
* سلام / سلامم: یک پاسخ دوستانه دریافت می‌کنید.

*پاسخ‌های یادگرفته شده*: ربات به سوالاتی که توسط مدیران به آن یاد داده شده پاسخ می‌دهد.
"""

        await message.reply(help_text)
        return

    # --- دستورات یادگیری (فقط برای ادمین در گروه و پی‌وی) ---
    if lower_text == "یادگیر فعال":
        if user_guid in ADMIN_IDS:
            if user_guid not in config["group_settings"]: # استفاده از user_guid برای حالت یادگیری هر ادمین
                config["group_settings"][user_guid] = {}
            config["group_settings"][user_guid]["learning_mode_active"] = target_id
            save_config(config)
            await message.reply("حالت یادگیری فعال شد. حالا هر پیامی رو که می‌خوای به ربات یاد بدی، به فرمت 'سوال|جواب1;جواب2' بفرست. برای خروج، 'یادگیر غیرفعال' رو بفرست.")
        else:
            await message.reply("⛔️ فقط مدیران می‌توانند حالت یادگیری را فعال کنند.")
        return
    elif lower_text == "یادگیر غیرفعال":
        if user_guid in ADMIN_IDS:
            if user_guid in config["group_settings"] and "learning_mode_active" in config["group_settings"][user_guid]:
                del config["group_settings"][user_guid]["learning_mode_active"]
                save_config(config)
                await message.reply("حالت یادگیری غیرفعال شد.")
            else:
                await message.reply("حالت یادگیری برای شما فعال نبود.")
        else:
            await message.reply("⛔️ فقط مدیران می‌توانند حالت یادگیری را غیرفعال کنند.")
        return

    learning_mode_for_user = config["group_settings"].get(user_guid, {}).get("learning_mode_active")
    if user_guid in ADMIN_IDS and learning_mode_for_user == target_id and '|' in lower_text:
        command_parts = lower_text.split('|', 1)
        if len(command_parts) == 2:
            question = command_parts[0].strip()
            answer_part = command_parts[1].strip()

            answers = [ans.strip() for ans in answer_part.split(';')]

            qa_data[target_id][question] = answers if len(answers) > 1 else answers[0]
            save_qa_data(qa_data)
            await message.reply(f"یاد گرفتم در این چت: '{question}' -> {answers}")
            print(f"Added QA for {target_id} (learning mode): {question} -> {answers} by admin {user_guid}")
        else:
            await message.reply("فرمت صحیح در حالت یادگیری: 'سوال|جواب1;جواب2'")
        return

    elif lower_text.startswith('/افزودن_پاسخ '):
        if user_guid in ADMIN_IDS:
            command_parts = lower_text[len('/افزودن_پاسخ '):].strip().split('|', 1)
            if len(command_parts) == 2:
                question = command_parts[0].strip()
                answer_part = command_parts[1].strip()

                answers = [ans.strip() for ans in answer_part.split(';')]

                qa_data[target_id][question] = answers if len(answers) > 1 else answers[0]
                save_qa_data(qa_data)
                await message.reply(f"سوال '{question}' با پاسخ {answers} در این چت ذخیره شد.")
                print(f"Added QA for {target_id}: {question} -> {answers} by admin {user_guid}")
            else:
                await message.reply("فرمت صحیح: /افزودن_پاسخ سوال|جواب1;جواب2")
        else:
            await message.reply("⛔️ فقط مدیران می‌توانند پاسخ جدید اضافه کنند.")
        return

    elif lower_text.startswith('/حذف_پاسخ '):
        if user_guid in ADMIN_IDS:
            question_to_delete = lower_text[len('/حذف_پاسخ '):].strip()

            if question_to_delete in qa_data.get(target_id, {}):
                del qa_data[target_id][question_to_delete]
                save_qa_data(qa_data)
                await message.reply(f"سوال '{question_to_delete}' از این چت حذف شد.")
                print(f"Deleted QA for {target_id}: {question_to_delete} by admin {user_guid}")
            else:
                await message.reply(f"سوال '{question_to_delete}' در این چت یافت نشد.")
        else:
            await message.reply("⛔️ فقط مدیران می‌توانند پاسخ حذف کنند.")
        return

    elif lower_text == "/پاکسازی_داده‌ها" or lower_text == "پاکسازی داده ها":
        if user_guid in ADMIN_IDS:
            if target_id in qa_data and qa_data[target_id]:
                deleted_questions_count = len(qa_data[target_id])
                qa_data[target_id] = {}
                save_qa_data(qa_data)
                await message.reply(f"✅ تمام {deleted_questions_count} سوال و پاسخ از این چت پاک شدند. (این عمل غیرقابل بازگشت است)")
                print(f"Cleared all QA data for {target_id}. Count: {deleted_questions_count} by admin {user_guid}")
            else:
                await message.reply("❌ هیچ داده‌ای برای پاکسازی در این چت وجود ندارد.")
        else:
            await message.reply("⛔️ فقط مدیران می‌توانند تمام داده‌ها را پاکسازی کنند.")
        return

    elif lower_text in ["لیست کلمات", "/لیست_کلمات", "کلمات من"]:
        questions = list(qa_data.get(target_id, {}).keys())
        if questions:
            response_text = "لیست سوالات یادگرفته شده در این چت:\n\n" + "\n".join([f"- {q}" for q in questions])
            if len(response_text) > 4000: # محدودیت طول پیام در روبیکا
                    response_text = "لیست سوالات یادگرفته شده (بخشی از آن):\n\n" + "\n".join([f"- {q}" for q in questions[:50]]) + "\n... و موارد دیگر."
            await message.reply(response_text)
        else:
            await message.reply("هیچ سوالی در این چت یادگرفته نشده است.")
        return

    elif lower_text == "افزودن پیام سفارشی":
        await message.reply("برای افزودن یک پیام سفارشی (سوال و جواب) جدید، می‌توانید از دستورات زیر استفاده کنید:\n\n1. **روش مستقیم (فقط مدیر):** `/افزودن_پاسخ سوال شما|پاسخ ربات1;پاسخ ربات2` (مثال: `/افزودن_پاسخ هوا چطوره؟|آفتابیه;ابریه`)\n\n2. **روش مکالمه‌ای (فقط مدیر):** ابتدا **یادگیر فعال** را ارسال کنید، سپس هر پیام به فرمت 'سوال|جواب1;جواب2' را بفرستید. برای پایان، **یادگیر غیرفعال** را ارسال کنید.")
        return


    # --- قابلیت نمایش زمان و تاریخ و ارز ---
    if lower_text == "/ساعت" or lower_text == "ساعت":
        iran_tz = pytz.timezone('Asia/Tehran')
        now = datetime.datetime.now(iran_tz)
        current_time = now.strftime("%H:%M:%S")
        await message.reply(f"⏰ ساعت فعلی: **{current_time}**")
        return
    elif lower_text == "/تاریخ" or lower_text == "تاریخ":
        iran_tz = pytz.timezone('Asia/Tehran')
        now = datetime.datetime.now(iran_tz)
        current_date = now.strftime("%Y/%m/%d")
        await message.reply(f"🗓️ تاریخ امروز: **{current_date}**")
        return
    elif lower_text == "/زمان" or lower_text == "زمان":
        iran_tz = pytz.timezone('Asia/Tehran')
        now = datetime.datetime.now(iran_tz)
        current_datetime = now.strftime("%Y/%m/%d %H:%M:%S")
        await message.reply(f"⏰🗓️ تاریخ و زمان فعلی: **{current_datetime}**")
        return
    elif lower_text == "/ارز" or lower_text == "ارز" or lower_text == "نرخ ارز":
        await message.reply(get_exchange_rates())
        return
    elif lower_text.startswith("/آب_و_هوا ") or lower_text.startswith("آب و هوا "):
        city_name = message.text.split(maxsplit=1)[-1].strip() # گرفتن نام شهر بعد از دستور
        if city_name:
            weather_info = get_weather(city_name)
            await message.reply(weather_info)
        else:
            await message.reply("لطفاً نام شهر را وارد کنید. مثال: `/آب_و_هوا تهران`")
        return
    elif lower_text == "/وضعیت_ربات" or lower_text == "وضعیت ربات":
        active_chats_count = sum(1 for settings in config["group_settings"].values() if settings.get("bot_active", True))
        total_qa_count = sum(len(qa) for qa in qa_data.values())

        uptime_seconds = int(time.time() - BOT_START_TIME)
        uptime_minutes, uptime_seconds = divmod(uptime_seconds, 60)
        uptime_hours, uptime_minutes = divmod(uptime_minutes, 60)
        uptime_days, uptime_hours = divmod(uptime_hours, 24)

        uptime_string = ""
        if uptime_days > 0:
            uptime_string += f"{uptime_days} روز و "
        if uptime_hours > 0:
            uptime_string += f"{uptime_hours} ساعت و "
        if uptime_minutes > 0:
            uptime_string += f"{uptime_minutes} دقیقه و "
        uptime_string += f"{uptime_seconds} ثانیه"

        status_message = (
            f"📊 **وضعیت کنونی ربات:**\n\n"
            f"🟢 ربات فعال و در حال خدمت‌رسانی است.\n"
            f"⏳ زمان فعالیت: **{uptime_string}**\n"
            f"💬 تعداد کل سوالات یادگرفته شده: **{total_qa_count}** سوال\n"
            f"👥 تعداد گروه‌ها/کانال‌های فعال: **{active_chats_count}** عدد\n\n"
            f"🌟  جهت ارتباط با سازنده @a120100"
        )
        await message.reply(status_message)
        return
    # --- پایان قابلیت نمایش زمان و تاریخ و ارز و وضعیت ربات ---

    # --- جدید: بازی سنگ کاغذ قیچی ---
    if lower_text.startswith("/بازی_سنگ_کاغذ_قیچی"):
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            await message.reply("لطفاً انتخاب خود را وارد کنید: `/بازی_سنگ_کاغذ_قیچی [سنگ/کاغذ/قیچی]`")
            return

        user_choice = args[1].strip()
        if user_choice not in ["سنگ", "کاغذ", "قیچی"]:
            await message.reply("انتخاب نامعتبر! لطفاً یکی از 'سنگ'، 'کاغذ' یا 'قیچی' را انتخاب کنید.")
            return

        result_message = play_rock_paper_scissors(user_choice)
        await message.reply(result_message)
        print(f"بازی سنگ کاغذ قیچی توسط {user_guid} اجرا شد. انتخاب کاربر: {user_choice}")
        return
    # --- پایان بازی سنگ کاغذ قیچی ---

    # --- مدیریت وضعیت فعال/غیرفعال سازی ربات و پاکسازی در گروه و کانال (فقط برای ادمین) ---
    # بررسی اینکه آیا پیام در گروه یا کانال است
    if chat_id.startswith('g') or chat_id.startswith('c'):
        if lower_text == "ربات فعال":
            if user_guid in ADMIN_IDS:
                if chat_id not in config["group_settings"]:
                    config["group_settings"][chat_id] = {}
                config["group_settings"][chat_id]["bot_active"] = True
                save_config(config)
                await message.reply(f"ربات در این {'کانال' if chat_id.startswith('c') else 'گروه'} فعال شد. (فقط مدیر)")
                print(f"ربات در چت {chat_id} فعال شد توسط ادمین {user_guid}.")
            else:
                await message.reply("⛔️ فقط مدیران می‌توانند ربات را فعال کنند.")
            return
        elif lower_text == "ربات غیرفعال":
            if user_guid in ADMIN_IDS:
                if chat_id not in config["group_settings"]:
                    config["group_settings"][chat_id] = {}
                config["group_settings"][chat_id]["bot_active"] = False
                save_config(config)
                await message.reply(f"ربات در این {'کانال' if chat_id.startswith('c') else 'گروه'} غیرفعال شد. (فقط مدیر)")
                print(f"ربات در چت {chat_id} غیرفعال شد توسط ادمین {user_guid}.")
            else:
                await message.reply("⛔️ فقط مدیران می‌توانند ربات را غیرفعال کنند.")
            return

        # دستورات خاص گروه
        if chat_id.startswith('g'):
            if lower_text == "سخنگو فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["speaker_mode_active"] = True
                    save_config(config)
                    await message.reply("حالت سخنگوی ربات در این گروه فعال شد. حالا ربات به کلمات کلیدی واکنش نشان می‌دهد. (فقط مدیر)")
                    print(f"حالت سخنگو در گروه {chat_id} فعال شد توسط ادمین {user_guid}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند حالت سخنگو را فعال کنند.")
                return
            elif lower_text == "سخنگو غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["speaker_mode_active"] = False
                    save_config(config)
                    await message.reply("حالت سخنگوی ربات در این گروه غیرفعال شد. (فقط مدیر)")
                    print(f"حالت سخنگو در گروه {chat_id} غیرفعال شد توسط ادمین {user_guid}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند حالت سخنگو را غیرفعال کنند.")
                return

            # --- جدید: حالت کلاس درس ---
            elif lower_text == "کلاس فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["class_mode_active"] = True
                    save_config(config)
                    await message.reply("حالت کلاس درس در این گروه فعال شد. از این پس فقط مدیران/معلمان می‌توانند پیام ارسال کنند.")
                    print(f"حالت کلاس درس در گروه {chat_id} فعال شد توسط ادمین {user_guid}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند حالت کلاس درس را فعال کنند.")
                return
            elif lower_text == "کلاس غیر فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["class_mode_active"] = False
                    save_config(config)
                    await message.reply("حالت کلاس درس در این گروه غیر فعال شد. همه کاربران می‌توانند پیام ارسال کنند.")
                    print(f"حالت کلاس درس در گروه {chat_id} غیرفعال شد توسط ادمین {user_guid}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند حالت کلاس درس را غیر فعال کنند.")
                return
            # --- پایان حالت کلاس درس ---

            if lower_text.startswith('/تنظیم_پیام_خوش_آمد_گویی'):
                if user_guid in ADMIN_IDS:
                    new_welcome_text = message.text[len("/تنظیم_پیام_خوش_آمد_گویی"):].strip()
                    if not new_welcome_text:
                        await message.reply("لطفاً متن پیام خوش‌آمدگویی را وارد کنید. مثال: `/تنظیم_پیام_خوش_آمد_گویی سلام [نام کاربر]! به گروه [نام گروه] خوش آمدی.`")
                        return
                    
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["welcome_message_text"] = new_welcome_text
                    save_config(config)
                    await message.reply(f"پیام خوش‌آمدگویی برای این گروه تنظیم شد:\n`{new_welcome_text}`")
                    print(f"پیام خوش‌آمدگویی برای گروه {chat_id} تنظیم شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return

            if lower_text == "/خوش_آمد_گویی_گروه_فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["welcome_message_enabled"] = True
                    save_config(config)
                    await message.reply("پیام خوش‌آمدگویی در این گروه فعال شد.")
                    print(f"خوش‌آمدگویی در گروه {chat_id} فعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            if lower_text == "/خوش_آمد_گویی_گروه_غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["welcome_message_enabled"] = False
                    save_config(config)
                    await message.reply("پیام خوش‌آمدگویی در این گروه غیرفعال شد.")
                    print(f"خوش‌آمدگویی در گروه {chat_id} غیرفعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return

            # --- جدید: تنظیم پیام خداحافظی ---
            if lower_text.startswith('/تنظیم_پیام_خداحافظی'):
                if user_guid in ADMIN_IDS:
                    new_leave_text = message.text[len("/تنظیم_پیام_خداحافظی"):].strip()
                    if not new_leave_text:
                        await message.reply("لطفاً متن پیام خداحافظی را وارد کنید. مثال: `/تنظیم_پیام_خداحافظی خداحافظ [نام کاربر]! امیدواریم باز هم شما را ببینیم.`")
                        return
                    
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["leave_message_text"] = new_leave_text
                    save_config(config)
                    await message.reply(f"پیام خداحافظی برای این گروه تنظیم شد:\n`{new_leave_text}`")
                    print(f"پیام خداحافظی برای گروه {chat_id} تنظیم شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text == "پیام_خداحافظی_فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["leave_message_enabled"] = True
                    save_config(config)
                    await message.reply("ارسال پیام خداحافظی در این گروه فعال شد.")
                    print(f"پیام خداحافظی در گروه {chat_id} فعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text == "پیام_خداحافظی_غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["leave_message_enabled"] = False
                    save_config(config)
                    await message.reply("ارسال پیام خداحافظی در این گروه غیرفعال شد.")
                    print(f"پیام خداحافظی در گروه {chat_id} غیرفعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            # --- پایان تنظیم پیام خداحافظی ---

            if lower_text == "/حذف_لینک_فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_links_enabled"] = True
                    save_config(config)
                    await message.reply("حذف لینک در این گروه فعال شد.")
                    print(f"حذف لینک در گروه {chat_id} فعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            if lower_text == "/حذف_لینک_غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_links_enabled"] = False
                    save_config(config)
                    await message.reply("حذف لینک در این گروه غیرفعال شد.")
                    print(f"حذف لینک در گروه {chat_id} غیرفعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return

            if lower_text == "/حذف_فوروارد_فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_forwards_enabled"] = True
                    save_config(config)
                    await message.reply("حذف فوروارد در این گروه فعال شد.")
                    print(f"حذف فوروارد در گروه {chat_id} فعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            if lower_text == "/حذف_فوروارد_غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_forwards_enabled"] = False
                    save_config(config)
                    await message.reply("حذف فوروارد در این گروه غیرفعال شد.")
                    print(f"حذف فوروارد در گروه {chat_id} غیرفعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            
            # --- جدید: مدیریت فوروارد از کانال‌های خاص ---
            elif lower_text.startswith('/مجاز_کردن_فوروارد_از '):
                if user_guid in ADMIN_IDS:
                    source_id = lower_text[len('/مجاز_کردن_فوروارد_از '):].strip()
                    if not re.fullmatch(r"[gc][0-9a-fA-F]{32}", source_id, re.IGNORECASE):
                        await message.reply("❌ فرمت آیدی وارد شده صحیح نیست. لطفاً یک آیدی معتبر (شروع با 'g' یا 'c' و ۳۳ کاراکتر) وارد کنید.")
                        return
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    if source_id not in config["group_settings"][chat_id]["allowed_forward_sources"]:
                        config["group_settings"][chat_id]["allowed_forward_sources"].append(source_id)
                        save_config(config)
                        await message.reply(f"✅ فوروارد از `{source_id}` به لیست منابع مجاز این گروه اضافه شد.")
                        print(f"Allowed forward source {source_id} added to {chat_id}.")
                    else:
                        await message.reply(f"⚠️ فوروارد از `{source_id}` از قبل مجاز است.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text.startswith('/ممنوع_کردن_فوروارد_از '):
                if user_guid in ADMIN_IDS:
                    source_id = lower_text[len('/ممنوع_کردن_فوروارد_از '):].strip()
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    if source_id in config["group_settings"][chat_id]["allowed_forward_sources"]:
                        config["group_settings"][chat_id]["allowed_forward_sources"].remove(source_id)
                        save_config(config)
                        await message.reply(f"✅ فوروارد از `{source_id}` از لیست منابع مجاز این گروه حذف شد.")
                        print(f"Allowed forward source {source_id} removed from {chat_id}.")
                    else:
                        await message.reply(f"⚠️ فوروارد از `{source_id}` در لیست منابع مجاز این گروه یافت نشد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text == "/لیست_فوروارد_مجاز":
                if user_guid in ADMIN_IDS:
                    sources = config["group_settings"].get(chat_id, {}).get("allowed_forward_sources", [])
                    if sources:
                        response_text = "منابع فوروارد مجاز در این گروه:\n" + "\n".join([f"- `{s}`" for s in sources])
                    else:
                        response_text = "در حال حاضر هیچ منبع فوروارد مجاز خاصی برای این گروه تنظیم نشده است. (تمام فورواردها مجاز هستند مگر اینکه 'حذف فوروارد فعال' باشد)"
                    await message.reply(response_text)
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این اطلاعات را مشاهده کنند.")
                return
            # --- پایان مدیریت فوروارد از کانال‌های خاص ---


            if lower_text == "/حذف_آیدی_فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_ids_enabled"] = True
                    save_config(config)
                    await message.reply("حذف آیدی در این گروه فعال شد.")
                    print(f"حذف آیدی در گروه {chat_id} فعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            if lower_text == "/حذف_آیدی_غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["delete_ids_enabled"] = False
                    save_config(config)
                    await message.reply("حذف آیدی در این گروه غیرفعال شد.")
                    print(f"حذف آیدی در گروه {chat_id} غیرفعال شد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return

            # --- جدید: ضد فحش ---
            elif lower_text.startswith('/افزودن_کلمه_ممنوعه '):
                if user_guid in ADMIN_IDS:
                    word = lower_text[len('/افزودن_کلمه_ممنوعه '):].strip()
                    if word:
                        if chat_id not in config["group_settings"]:
                            config["group_settings"][chat_id] = {}
                        if 'forbidden_words' not in config["group_settings"][chat_id]:
                            config["group_settings"][chat_id]['forbidden_words'] = []
                        if word not in config["group_settings"][chat_id]['forbidden_words']:
                            config["group_settings"][chat_id]['forbidden_words'].append(word)
                            save_config(config)
                            await message.reply(f"✅ کلمه `{word}` به لیست کلمات ممنوعه این گروه اضافه شد.")
                            print(f"Forbidden word '{word}' added to {chat_id}.")
                        else:
                            await message.reply(f"⚠️ کلمه `{word}` از قبل در لیست کلمات ممنوعه موجود است.")
                    else:
                        await message.reply("❌ لطفاً کلمه‌ای را برای اضافه کردن وارد کنید.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text.startswith('/حذف_کلمه_ممنوعه '):
                if user_guid in ADMIN_IDS:
                    word = lower_text[len('/حذف_کلمه_ممنوعه '):].strip()
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    if 'forbidden_words' not in config["group_settings"][chat_id]:
                        config["group_settings"][chat_id]['forbidden_words'] = []
                    if word in config["group_settings"][chat_id]['forbidden_words']:
                        config["group_settings"][chat_id]['forbidden_words'].remove(word)
                        save_config(config)
                        await message.reply(f"✅ کلمه `{word}` از لیست کلمات ممنوعه این گروه حذف شد.")
                        print(f"Forbidden word '{word}' removed from {chat_id}.")
                    else:
                        await message.reply(f"⚠️ کلمه `{word}` در لیست کلمات ممنوعه این گروه یافت نشد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text == "/لیست_کلمات_ممنوعه":
                if user_guid in ADMIN_IDS:
                    words = config["group_settings"].get(chat_id, {}).get("forbidden_words", [])
                    if words:
                        response_text = "لیست کلمات ممنوعه در این گروه:\n" + "\n".join([f"- {w}" for w in words])
                    else:
                        response_text = "لیست کلمات ممنوعه برای این گروه خالی است."
                    await message.reply(response_text)
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این اطلاعات را مشاهده کنند.")
                return
            # --- پایان ضد فحش ---

            # --- جدید: ضد اسپم ---
            elif lower_text == "ضداسپم فعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["spam_protection_active"] = True
                    save_config(config)
                    await message.reply("سیستم ضد اسپم در این گروه فعال شد.")
                    print(f"Spam protection activated for {chat_id}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            elif lower_text == "ضداسپم غیرفعال":
                if user_guid in ADMIN_IDS:
                    if chat_id not in config["group_settings"]:
                        config["group_settings"][chat_id] = {}
                    config["group_settings"][chat_id]["spam_protection_active"] = False
                    save_config(config)
                    await message.reply("سیستم ضد اسپم در این گروه غیرفعال شد.")
                    print(f"Spam protection deactivated for {chat_id}.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند این تنظیم را انجام دهند.")
                return
            # --- پایان ضد اسپم ---

            # --- جدید: آمار فعالیت کاربران ---
            elif lower_text.startswith("امارش"):
                if user_guid in ADMIN_IDS:
                    target_user_guid = user_guid # پیش‌فرض: آمار خود کاربر
                    args = lower_text.split(maxsplit=1)
                    if len(args) > 1 and args[1] != "من":
                        # اگر پیامی ریپلای شده باشد، از author_guid ریپلای استفاده می‌کنیم
                        if message.reply_to_message_id:
                            replied_message = await bot.get_messages_by_id(object_guid=chat_id, message_ids=[message.reply_to_message_id])
                            if replied_message and replied_message.messages:
                                target_user_guid = replied_message.messages[0].author_guid
                        else:
                            # اگر GUID به صورت مستقیم در پیام باشد
                            potential_guid = args[1].strip()
                            if re.fullmatch(r"u[0-9a-fA-F]{32}", potential_guid, re.IGNORECASE):
                                target_user_guid = potential_guid
                            else:
                                await message.reply("❌ لطفاً یا به پیام کاربر ریپلای کنید یا GUID صحیح کاربر را وارد کنید (مثال: `امارش uxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`).")
                                return
                    
                    if target_user_guid in user_activity_stats.get(chat_id, {}):
                        stats = user_activity_stats[chat_id][target_user_guid]
                        
                        try: # تلاش برای گرفتن نام کاربر
                            user_info_response = await bot.get_user_info([target_user_guid])
                            user_name = user_info_response.users[0].first_name if user_info_response and user_info_response.users else "کاربر ناشناس"
                        except Exception:
                            user_name = "کاربر ناشناس"

                        stats_text = (
                            f"📊 آمار فعالیت **{user_name}** در این گروه:\n"
                            f"پیام‌های ارسال شده: **{stats.get('message_count', 0)}**\n"
                            f"تعداد سلام‌ها: **{stats.get('hello_count', 0)}**\n"
                            f"تعداد فحش‌ها: **{stats.get('swear_count', 0)}**"
                        )
                        await message.reply(stats_text)
                    else:
                        await message.reply("آمار فعالیتی برای این کاربر در این گروه یافت نشد.")
                else:
                    await message.reply("⛔️ فقط مدیران می‌توانند آمار کاربران را مشاهده کنند.")
                return
            # --- پایان آمار فعالیت کاربران ---

            # بررسی و حذف پیام‌ها بر اساس تنظیمات گروه
            if bot_active_in_chat: # این بررسی برای جلوگیری از تداخل با حالت غیرفعال ربات است
                # --- جدید: ضد فحش در اینجا اعمال می‌شود ---
                if forbidden_words:
                    for word in forbidden_words:
                        if word in lower_text:
                            try:
                                await message.delete()
                                print(f"پیام حاوی کلمه ممنوعه ('{word}') در گروه {chat_id} حذف شد. کاربر: {user_guid}")
                                await bot.send_message(object_guid=chat_id, text=f"⛔️ پیام شما حاوی کلمه ممنوعه بود و حذف شد.")
                                return # برای جلوگیری از پردازش بیشتر پیام حذف شده
                            except Exception as e:
                                print(f"خطا در حذف پیام حاوی کلمه ممنوعه: {e}")
                                break # اگر نتوانست حذف کند، از حلقه کلمات ممنوعه خارج شود

                if delete_forwards_enabled and message.forward_info:
                    # اگر allowed_forward_sources خالی نباشد و فوروارد از یک منبع غیرمجاز باشد
                    if allowed_forward_sources and message.forward_info.from_chat_id not in allowed_forward_sources:
                        try:
                            await message.delete()
                            print(f"فوروارد غیرمجاز (منبع: {message.forward_info.from_chat_id}) در گروه {chat_id} حذف شد.")
                            return
                        except Exception as e:
                            print(f"خطا در حذف فوروارد غیرمجاز: {e}")
                    # اگر allowed_forward_sources خالی باشد، یعنی تمام فورواردها حذف شوند
                    elif not allowed_forward_sources: # اگر لیستی از منابع مجاز وجود ندارد و حذف فوروارد فعال است
                         try:
                            await message.delete()
                            print(f"پیام فوروارد شده در گروه {chat_id} حذف شد.")
                            return # برای جلوگیری از پردازش بیشتر پیام حذف شده
                         except Exception as e:
                            print(f"خطا در حذف پیام فوروارد شده: {e}")

                url_pattern = r"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
                www_pattern = r"www\.(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"

                if delete_links_enabled and (re.search(url_pattern, lower_text) or re.search(www_pattern, lower_text)):
                    try:
                        await message.delete()
                        print(f"پیام حاوی لینک در گروه {chat_id} حذف شد.")
                        return # برای جلوگیری از پردازش بیشتر پیام حذف شده
                    except Exception as e:
                        print(f"خطا در حذف پیام حاوی لینک: {e}")

                id_pattern = r"@\w+"
                if delete_ids_enabled and re.search(id_pattern, lower_text):
                    try:
                        await message.delete()
                        print(f"پیام حاوی آیدی در گروه {chat_id} حذف شد.")
                        return # برای جلوگیری از پردازش بیشتر پیام حذف شده
                    except Exception as e:
                        print(f"خطا در حذف پیام حاوی آیدی: {e}")

            # پاسخگویی حالت سخنگو در گروه (فقط اگر ربات فعال باشد)
            if speaker_mode_active_in_chat and bot_active_in_chat:
                if lower_text == "تاس":
                    dice_roll = random.randint(1, 6)
                    await message.reply(f"🎲 عدد تاس: {dice_roll}")
                    return
            if speaker_mode_active_in_chat and bot_active_in_chat:
                if lower_text == "عدد":
                    dice_roll = random.randint(1, 20)
                    await message.reply(f" عدد: {dice_roll}")
                    return
                if "سلام" in lower_text or "سلامم" in lower_text or "سلام علک" in lower_text or "سلام نفسم" in lower_text or "سلام عزیزم" in lower_text or "سلام عشقم" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["سلام"]))
                    return
                elif "خوبی" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["خوبی"]))
                    return
                elif "خوبم" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["خوبم"]))
                    return
                elif "چه خبر" in lower_text or "چخبر" in lower_text or "چ خبر" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["چه خبر"]))
                    return
                elif "ربات" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["ربات"]))
                    return
                elif "چالش" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["چالش"]))
                    return
                elif "فال" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["فال"]))
                    return
                elif "خدافظ" in lower_text or "بای" in lower_text or "من رفتم" in lower_text:
                    await message.reply(random.choice(group_speaker_responses["خدافظی"]))
                    return
                elif lower_text == "داستان":
                    await message.reply(random.choice(group_speaker_responses["داستان"]))
                    return
                elif lower_text == "جوک":
                    await message.reply(random.choice(group_speaker_responses["جوک"]))
                    return
                elif lower_text == "فال حافظ":
                    await message.reply(random.choice(group_speaker_responses["فال حافط"]))
                    return
                
                # --- جدید: پاسخ به "فقط ع" ---
                elif lower_text == "ع":
                    await message.reply(random.choice(["اره", "ارع", "اجر پاره"]))
                    return
        
                elif lower_text == "عه":
                    await message.reply(random.choice(["اره", "ارع", "اجر پاره"]))
                    return
                    
                elif lower_text == "سنگ":
                    await message.reply(random.choice(group_speaker_responses["سنگ"]))
                    return
                    
                elif lower_text == "کاغذ":
                    await message.reply(random.choice(group_speaker_responses["کاغذ"]))
                    return
                    
                elif lower_text == "قیچی":
                    await message.reply(random.choice(group_speaker_responses["قیچی"]))
                    return
                    
                elif lower_text =="چیستان":
                    await message.reply(random.choice(group_speaker_responses["چیستان"]))
                    return
               
                elif lower_text =="سازنده":
                    await message.reply(random.choice(group_speaker_responses["سازنده"]))
                    return  
                   
                elif lower_text =="اره":
                    await message.reply(random.choice(group_speaker_responses["اره"]))
                    return  
                    
                elif lower_text =="ارع":
                    await message.reply(random.choice(group_speaker_responses["اره"]))
                    return  
                   
                elif lower_text =="اره بابا":
                    await message.reply(random.choice(group_speaker_responses["اره بابا "]))
                    return  
                                    
                elif lower_text =="نه":
                    await message.reply(random.choice(group_speaker_responses["نه"]))
                    return                  
                                
                elif lower_text =="نع":
                    await message.reply(random.choice(group_speaker_responses["نه"]))
                    return                     
                                            
                elif lower_text =="ن":
                    await message.reply(random.choice(group_speaker_responses["نه"]))
                    return                          
                                                                    
                elif lower_text =="سازندت":
                    await message.reply(random.choice(group_speaker_responses["سازنده"]))
                    return  
                    
                elif lower_text =="مالک":
                    await message.reply(random.choice(group_speaker_responses["سازنده"]))
                    return  
                              
                elif lower_text == "بازی":
                    await message.reply(random.choice(group_speaker_responses["بازی"]))
                    return
                    
                elif lower_text =="معما":
                    await message.reply(random.choice(group_speaker_responses["چیستان"]))
                    return
                # --- پایان پاسخ به "فقط ع" ---
                
                for emoji, responses in group_speaker_responses["emoji_responses"].items():
                    if emoji in message.text: # برای ایموجی‌ها، متن اصلی پیام را بررسی می‌کنیم
                        await message.reply(random.choice(responses))
                        print(f"پاسخ به ایموجی '{emoji}' در گروه {chat_id} ارسال شد.")
                        return

        # دستورات قوانین (هم در گروه و هم در کانال)
        if lower_text.startswith('/تنظیم_قوانین '):
            if user_guid in ADMIN_IDS:
                rules_text = message.text[len('/تنظیم_قوانین '):].strip()
                if rules_text:
                    group_rules[chat_id] = rules_text
                    save_group_rules(group_rules)
                    await message.reply("✅ قوانین گروه/کانال با موفقیت تنظیم شد.")
                    print(f"قوانین برای چت {chat_id} تنظیم شد توسط ادمین {user_guid}.")
                else:
                    await message.reply("❌ لطفاً متن قوانین را بعد از دستور وارد کنید. مثال: `/تنظیم_قوانین 1. فحاشی ممنوع 2. تبلیغ ممنوع`")
            else:
                await message.reply("⛔️ فقط مدیران می‌توانند قوانین را تنظیم کنند.")
            return
        elif lower_text == "/قوانین" or lower_text == "قوانین":
            if chat_id in group_rules and group_rules[chat_id]:
                await message.reply(f"📜 قوانین این {'کانال' if chat_id.startswith('c') else 'گروه'}:\n\n{group_rules[chat_id]}")
            else:
                await message.reply(f"❌ هیچ قانونی برای این {'کانال' if chat_id.startswith('c') else 'گروه'} تنظیم نشده است.")
            return

        # دستورات آمار گروه (هم در گروه و هم در کانال)
        if lower_text == "/آمار_گروه" or lower_text == "آمار گروه":
            if user_guid in ADMIN_IDS:
                try:
                    chat_info_response = await bot.get_chat_info_by_object_guid(object_guid=chat_id)
                    
                    if chat_info_response and hasattr(chat_info_response, 'chat') and chat_info_response.chat:
                        member_count = getattr(chat_info_response.chat, 'member_count', "نامشخص") # Added safe access with getattr
                        
                        response_text = f"📊 آمار این {'کانال' if chat_id.startswith('c') else 'گروه'}:\n"
                        response_text += f"تعداد اعضا: **{member_count}** نفر\n"
                        await message.reply(response_text)
                        print(f"آمار چت {chat_id} درخواست شد توسط ادمین {user_guid}.")
                    else:
                        await message.reply(f"❌ اطلاعاتی برای چت {chat_id} یافت نشد. ممکن است ربات دسترسی نداشته باشد یا چت معتبر نباشد.")
                        print(f"خطا: اطلاعات چت برای {chat_id} در get_chat_info_by_object_guid یافت نشد یا ساختار غیرمنتظره بود.")

                except Exception as e:
                    await message.reply(f"❌ خطایی در دریافت آمار رخ داد: {e}\nلطفاً مطمئن شوید ربات در این چت دسترسی لازم را دارد و مدیر است.")
                    print(f"خطا در دریافت آمار چت {chat_id}: {e}")
            else:
                await message.reply("⛔️ فقط مدیران می‌توانند آمار گروه/کانال را مشاهده کنند.")
            return
        return # پایان پردازش دستورات گروه/کانال


    # --- دستورات فقط برای پی‌وی (گفتگو خصوصی) ---
    if chat_id.startswith('u'):

        if user_guid in ADMIN_IDS:
            if lower_text.startswith('/ارسال_به_کانال '):
                message_to_send = message.text[len('/ارسال_به_کانال '):].strip()
                if message_to_send and DEFAULT_CHANNEL_ID and DEFAULT_CHANNEL_ID != "":
                    try:
                        await bot.send_message(object_guid=DEFAULT_CHANNEL_ID, text=message_to_send)
                        await message.reply(f"پیام شما با موفقیت به کانال ارسال شد.")
                        print(f"Sent message to channel {DEFAULT_CHANNEL_ID}: {message_to_send} by admin {user_guid}")
                    except Exception as e:
                        await message.reply(f"خطا در ارسال پیام به کانال: {e}\nممکن است آیدی کانال اشتباه باشد یا ربات ادمین کانال نباشد.")
                        print(f"Error sending message to channel {DEFAULT_CHANNEL_ID}: {e}")
                elif not DEFAULT_CHANNEL_ID or DEFAULT_CHANNEL_ID == "":
                    await message.reply("لطفاً ابتدا آیدی کانال پیش‌فرض را با دستور `/تنظیم_آیدی_کانال [آیدی شما]` تنظیم کنید.")
                else:
                    await message.reply("لطفاً متنی برای ارسال به کانال وارد کنید. مثال: /ارسال_به_کانال سلام به همه اعضا!")
                return
            elif lower_text.startswith('/افزودن_مدیر '):
                new_admin_guid = message.text[len('/افزودن_مدیر '):].strip()
                if re.fullmatch(r"u[0-9a-fA-F]{32}", new_admin_guid, re.IGNORECASE):
                    if new_admin_guid not in ADMIN_IDS:
                        ADMIN_IDS.append(new_admin_guid)
                        config["admin_ids"] = ADMIN_IDS
                        save_config(config)
                        await message.reply(f"✅ کاربر `{new_admin_guid}` به لیست مدیران اضافه شد.")
                        print(f"Admin {new_admin_guid} added by {user_guid}. Current admins: {ADMIN_IDS}")
                    else:
                        await message.reply(f"⚠️ کاربر `{new_admin_guid}` از قبل در لیست مدیران موجود است.")
                else:
                    await message.reply("❌ فرمت GUID وارد شده صحیح نیست. لطفاً یک GUID معتبر (شروع با 'u' و ۳۳ کاراکتر) وارد کنید.")
                return
            elif lower_text.startswith('/حذف_مدیر '):
                admin_to_remove_guid = message.text[len('/حذف_مدیر '):].strip()
                if re.fullmatch(r"u[0-9a-fA-F]{32}", admin_to_remove_guid, re.IGNORECASE):
                    if admin_to_remove_guid in ADMIN_IDS:
                        if len(ADMIN_IDS) > 1: # حداقل یک ادمین باید بماند
                            ADMIN_IDS.remove(admin_to_remove_guid)
                            config["admin_ids"] = ADMIN_IDS
                            save_config(config)
                            await message.reply(f"✅ کاربر `{admin_to_remove_guid}` از لیست مدیران حذف شد.")
                            print(f"Admin {admin_to_remove_guid} removed by {user_guid}. Current admins: {ADMIN_IDS}")
                        else:
                            await message.reply("⛔️ نمی‌توانید آخرین مدیر را حذف کنید. همیشه باید حداقل یک مدیر وجود داشته باشد.")
                    else:
                        await message.reply(f"⚠️ کاربر `{admin_to_remove_guid}` در لیست مدیران یافت نشد.")
                else:
                    await message.reply("❌ فرمت GUID وارد شده صحیح نیست. لطفاً یک GUID معتبر وارد کنید.")
                return
            elif lower_text == "/لیست_مدیران":
                if ADMIN_IDS:
                    admin_list_str = "\n".join([f"- `{admin_id}`" for admin_id in ADMIN_IDS])
                    await message.reply(f"لیست مدیران فعلی:\n{admin_list_str}")
                else:
                    await message.reply("در حال حاضر هیچ مدیری ثبت نشده است. اولین نفری که به ربات پیام دهد، مدیر خواهد شد.")
                return
            elif lower_text.startswith("/تنظیم_آیدی_کانال"):
                new_channel_id = message.text[len("/تنظیم_آیدی_کانال"):].strip()
                if not new_channel_id or not re.fullmatch(r"c[0-9a-fA-F]{32}", new_channel_id, re.IGNORECASE):
                    await message.reply("❌ لطفاً آیدی کانال را به فرمت صحیح (شروع با 'c' و ۳۳ کاراکتر) وارد کنید. مثال: `/تنظیم_آیدی_کانال c0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`")
                    return
                
                config["default_channel_id"] = new_channel_id
                DEFAULT_CHANNEL_ID = new_channel_id
                save_config(config)
                await message.reply(f"آیدی کانال پیش‌فرض به `{new_channel_id}` تغییر یافت.")
                print(f"آیدی کانال پیش‌فرض به {new_channel_id} تغییر یافت.")
                return
            elif lower_text.startswith("/تنظیم_کلید_آب_و_هوا"):
                new_api_key = message.text[len("/تنظیم_کلید_آب_و_هوا"):].strip()
                if not new_api_key:
                    await message.reply("❌ لطفاً کلید API OpenWeatherMap را وارد کنید. مثال: `/تنظیم_کلید_آب_و_هوا YOUR_API_KEY`")
                    return
                
                config["openweathermap_api_key"] = new_api_key
                OPENWEATHER_API_KEY = new_api_key
                save_config(config)
                await message.reply(f"✅ کلید API آب و هوا با موفقیت تنظیم شد.")
                print(f"کلید API آب و هوا توسط {user_guid} تنظیم شد.")
                return


        # --- پاسخ‌های ثابت در پی‌وی ---
        if "سازنده" in lower_text or "سازندت" in lower_text or "غلامی" in lower_text or "کی ساختی" in lower_text:
            await message.reply("سازنده من آقای غلامی با آیدی @a120100 در روبیکا")
            return
        elif "تبلیغ" in lower_text or "تبلیغات" in lower_text or "تعرفه" in lower_text:
            response_text = """هزینه تبلیغ های کانال (شهر قوچان)

تبلیغ ، آزاد
 60 تومان

تبلیغ ، پست آخر
 90 تومان

👇👇سرویس اضافه 👇👇

کپشن
30 تومان

۶ ساعت سنجاق
10 تومان

12 ساعت سنجاق
20 تومان

قیمت هر  ساعت پست آخر
10 تومان

👈تبلیغ ها همیشه در کانال میمونه و پاک نمیشود 👉

https://rubika.ir/QUCHAN2"""
            await message.reply(response_text)
            return
        elif "تب" in lower_text or "تبادل" in lower_text:
            await message.reply("فعلا تبادل نداریم ولی اگر تبلیغات خواستید داریم")
            return
        elif "کارت" in lower_text or "شماره کارت" in lower_text:
            await message.reply("6219861952282522 غلامی")
            return
        elif lower_text in ["پست آزاد", "آزاد", "پست آخر"]:
            await message.reply("اوکی")
            return
        elif "خدمت شما" in lower_text:
            await message.reply("اوکی")
            return
        elif "تخفیف" in lower_text:
            await message.reply("تخفیف نداریم قیمت ها همینه")
            return
        elif "کی اجرا میشه" in lower_text or "کی میزارین" in lower_text or "کی درج میشه" in lower_text:
            await message.reply("اگر پست آخر باشه ساعت 10 اگر پست آزاد باشه ساعت درخواستی شما")
            return
        elif lower_text == "سلام" or lower_text == "سلامm": # احتمالا منظور "سلام" و "سلامم" بوده است
            await message.reply("سلام بفرمایید")
            return

        # --- پاسخ به سوالات یادگرفته شده (QA) - آخرین بررسی ---
        # این بخش باید بعد از تمام دستورات خاص قرار گیرد تا اولویت دستورات حفظ شود.
        if lower_text in qa_data.get(target_id, {}):
            response = qa_data[target_id][lower_text]
            if isinstance(response, list):
                await message.reply(random.choice(response))
            else:
                await message.reply(response)
            return

# === شروع ربات ===
bot.run()
